self.webpackChunkRemoteClient([79],{136:function(e,t,r){"use strict";var n=r(13),s=(r(3),r(2),r(5),r(15)),i=r(18),o=r(21),a=(r(36),r(37),r(25));let c=class extends a.a{constructor(...e){super(...e),this.requestOptions=null,this.url=null}normalizeCtorArgs(e,t){return"string"!=typeof e?e:{url:e,...t}}get parsedUrl(){return this._parseUrl(this.url)}_parseUrl(e){return e?Object(o.I)(e):null}_encode(e,t,r){const n={};for(const s in e){if("declaredClass"===s)continue;const i=e[s];if(null!=i&&"function"!=typeof i)if(Array.isArray(i)){n[s]=[];for(let e=0;e<i.length;e++)n[s][e]=this._encode(i[e])}else if("object"==typeof i)if(i.toJSON){const e=i.toJSON(r&&r[s]);n[s]=t?e:JSON.stringify(e)}else n[s]=t?i:JSON.stringify(i);else n[s]=i}return n}};Object(n.a)([Object(s.b)({readOnly:!0})],c.prototype,"parsedUrl",null),Object(n.a)([Object(s.b)()],c.prototype,"requestOptions",void 0),Object(n.a)([Object(s.b)({type:String})],c.prototype,"url",void 0),c=Object(n.a)([Object(i.a)("esri.tasks.Task")],c);var l=c;t.a=l},629:function(e,t,r){"use strict";r.r(t);var n=r(13),s=(r(3),r(2),r(5)),i=r(15),o=r(18),a=r(21),c=(r(36),r(37),r(136)),l=r(54),O=r(66),u=r(115),f=(r(63),r(64));function N(e){return{geometryType:Object(f.c)(e[0]),geometries:e.map((e=>e.toJSON()))}}function p(e,t,r){const n=Object(f.b)(t);return e.map((e=>{const t=n.fromJSON(e);return t.spatialReference=r,t}))}var y=r(59);const j=new y.a({MGRS:"mgrs",USNG:"usng",UTM:"utm",GeoRef:"geo-ref",GARS:"gars",DMS:"dms",DDM:"ddm",DD:"dd"}),b=new y.a({109006:"centimeters",9102:"decimal-degrees",109005:"decimeters",9002:"feet",109009:"inches",9036:"kilometers",9001:"meters",9035:"miles",109007:"millimeters",109012:"nautical-miles",9096:"yards"});var m=r(55);let d=class extends m.a{constructor(e){super(e),this.deviationUnit=null,this.geometries=null,this.maxDeviation=null}};Object(n.a)([Object(i.b)({type:String,json:{write:!0}})],d.prototype,"deviationUnit",void 0),Object(n.a)([Object(i.b)({json:{read:{reader:e=>e?e.map((e=>Object(f.a)(e))):null},write:{writer:(e,t)=>{t.geometries=e.map((e=>e.toJSON()))}}}})],d.prototype,"geometries",void 0),Object(n.a)([Object(i.b)({type:Number,json:{write:!0}})],d.prototype,"maxDeviation",void 0),d=Object(n.a)([Object(o.a)("esri.tasks.support.GeneralizeParameters")],d),d.from=Object(s.m)(d);var g=d;const S=new y.a({preserveShape:"preserve-shape"});var T=r(104);let I=class extends m.a{constructor(e){super(e),this.calculationType=null,this.geodesic=null,this.lengthUnit=null,this.polylines=null}};Object(n.a)([Object(i.b)({type:String,json:{write:!0}})],I.prototype,"calculationType",void 0),Object(n.a)([Object(i.b)({type:Boolean,json:{write:!0}})],I.prototype,"geodesic",void 0),Object(n.a)([Object(i.b)({json:{write:!0}})],I.prototype,"lengthUnit",void 0),Object(n.a)([Object(i.b)({type:[T.a],json:{read:{reader:e=>e?e.map((e=>Object(f.a)(e))):null},write:{writer:(e,t)=>{t.polylines=e.map((e=>e.toJSON()))}}}})],I.prototype,"polylines",void 0),I=Object(n.a)([Object(o.a)("esri.tasks.support.LengthsParameters")],I),I.from=Object(s.m)(I);var _=I;const R=new y.a({esriGeometryOffsetBevelled:"bevelled",esriGeometryOffsetMitered:"mitered",esriGeometryOffsetRounded:"rounded"}),h=new y.a({9001:"meters",9002:"feet",9036:"kilometers",9093:"miles",109012:"nautical-miles",109001:"yards"});let U=class extends m.a{constructor(e){super(e),this.bevelRatio=null,this.geometries=null,this.offsetDistance=null,this.offsetHow=null,this.offsetUnit=null}};Object(n.a)([Object(i.b)({type:Number,json:{write:!0}})],U.prototype,"bevelRatio",void 0),Object(n.a)([Object(i.b)({json:{read:{reader:e=>e?e.map((e=>Object(f.a)(e))):null},write:{writer:(e,t)=>{t.geometries=e.map((e=>e.toJSON()))}}}})],U.prototype,"geometries",void 0),Object(n.a)([Object(i.b)({type:Number,json:{write:!0}})],U.prototype,"offsetDistance",void 0),Object(n.a)([Object(i.b)({type:String,json:{write:!0}})],U.prototype,"offsetHow",void 0),Object(n.a)([Object(i.b)({type:String,json:{write:!0}})],U.prototype,"offsetUnit",void 0),U=Object(n.a)([Object(o.a)("esri.tasks.support.OffsetParameters")],U),U.from=Object(s.m)(U);var E=U;let J=class extends m.a{constructor(e){super(e),this.geometries=null,this.outSpatialReference=null,this.transformation=null,this.transformForward=null}toJSON(){const e=this.geometries.map((function(e){return e.toJSON()})),t=this.geometries[0],r={};return r.outSR=this.outSpatialReference.wkid||JSON.stringify(this.outSpatialReference.toJSON()),r.inSR=t.spatialReference.wkid||JSON.stringify(t.spatialReference.toJSON()),r.geometries=JSON.stringify({geometryType:Object(f.c)(t),geometries:e}),this.transformation&&(r.transformation=this.transformation.wkid||JSON.stringify(this.transformation)),null!=this.transformForward&&(r.transformForward=this.transformForward),r}};Object(n.a)([Object(i.b)()],J.prototype,"geometries",void 0),Object(n.a)([Object(i.b)({json:{read:{source:"outSR"}}})],J.prototype,"outSpatialReference",void 0),Object(n.a)([Object(i.b)()],J.prototype,"transformation",void 0),Object(n.a)([Object(i.b)()],J.prototype,"transformForward",void 0),J=Object(n.a)([Object(o.a)("esri.tasks.support.ProjectParameters")],J);var A=J;const v=Object(s.m)(A),w=new y.a({esriGeometryRelationCross:"cross",esriGeometryRelationDisjoint:"disjoint",esriGeometryRelationIn:"in",esriGeometryRelationInteriorIntersection:"interior-intersection",esriGeometryRelationIntersection:"intersection",esriGeometryRelationLineCoincidence:"line-coincidence",esriGeometryRelationLineTouch:"line-touch",esriGeometryRelationOverlap:"overlap",esriGeometryRelationPointTouch:"point-touch",esriGeometryRelationTouch:"touch",esriGeometryRelationWithin:"within",esriGeometryRelationRelation:"relation"});let D=class extends m.a{constructor(e){super(e),this.geometries1=null,this.geometries2=null,this.relation=null,this.relationParameter=null}};Object(n.a)([Object(i.b)({json:{read:{reader:e=>e?e.map((e=>Object(f.a)(e))):null},write:{writer:(e,t)=>{t.geometries1=e.map((e=>e.toJSON()))}}}})],D.prototype,"geometries1",void 0),Object(n.a)([Object(i.b)({json:{read:{reader:e=>e?e.map((e=>Object(f.a)(e))):null},write:{writer:(e,t)=>{t.geometries2=e.map((e=>e.toJSON()))}}}})],D.prototype,"geometries2",void 0),Object(n.a)([Object(i.b)({type:String,json:{write:!0}})],D.prototype,"relation",void 0),Object(n.a)([Object(i.b)({type:String,json:{write:!0}})],D.prototype,"relationParameter",void 0),D=Object(n.a)([Object(o.a)("esri.tasks.support.RelationParameters")],D),D.from=Object(s.m)(D);var C=D;const L=new y.a({0:"default-curve-extension",1:"relocate-ends",2:"keep-end-attributes",4:"no-end-attributes",8:"no-extend-at-from",16:"no-extend-at-to"});let M=class extends m.a{constructor(e){super(e),this.extendHow="default-curve-extension",this.polylines=null,this.trimExtendTo=null}};Object(n.a)([Object(i.b)({type:String,json:{write:!0}})],M.prototype,"extendHow",void 0),Object(n.a)([Object(i.b)({type:[T.a],json:{read:{reader:e=>e?e.map((e=>Object(f.a)(e))):null},write:{writer:(e,t)=>{t.polylines=e.map((e=>e.toJSON()))}}}})],M.prototype,"polylines",void 0),Object(n.a)([Object(i.b)({json:{read:{reader:e=>e?Object(f.a)(e):null},write:{writer:(e,t)=>{t.trimExtendTo=e.toJSON()}}}})],M.prototype,"trimExtendTo",void 0),M=Object(n.a)([Object(o.a)("esri.tasks.support.TrimExtendParameters")],M),M.from=Object(s.m)(M);var q=M;let x=class extends c.a{constructor(e){super(e),this.url=null}areasAndLengths(e,t){return async function(e,t,r){const n=Object(O.c)(e),s={...n.query,f:"json",...t.toJSON()},i=Object(O.a)(s,r);return Object(l.default)(n.path+"/areasAndLengths",i).then((e=>e.data))}(this.url,e,t)}autoComplete(e,t,r){return async function(e,t,r,n){const s=t[0].spatialReference,i=Object(O.c)(e),o={...i.query,f:"json",sr:JSON.stringify(s.toJSON()),polygons:JSON.stringify(N(t).geometries),polylines:JSON.stringify(N(r).geometries)},a=Object(O.a)(o,n);return Object(l.default)(i.path+"/autoComplete",a).then((({data:e})=>(e.geometries||[]).map((({rings:e})=>new u.a({spatialReference:s,rings:e})))))}(this.url,e,t,r)}buffer(e,t){return async function(e,t,r){const n=Object(O.c)(e),s={...n.query,f:"json",...t.toJSON()},i=t.outSpatialReference||t.geometries[0].spatialReference,o=Object(O.a)(s,r);return Object(l.default)(n.path+"/buffer",o).then((e=>(e.data.geometries||[]).map((({rings:e})=>new u.a({spatialReference:i,rings:e})))))}(this.url,e,t)}convexHull(e,t){return async function(e,t,r){const n=t[0].spatialReference,s=Object(O.c)(e),i={...s.query,f:"json",sr:JSON.stringify(n.toJSON()),geometries:JSON.stringify(N(t))},o=Object(O.a)(i,r);return Object(l.default)(s.path+"/convexHull",o).then((({data:e})=>Object(f.a)(e.geometry).set({spatialReference:n})))}(this.url,e,t)}cut(e,t,r){return async function(e,t,r,n){const s=Object(O.c)(e),i=t[0].spatialReference,o={...n,query:{...s.query,f:"json",sr:JSON.stringify(i),target:JSON.stringify({geometryType:Object(f.c)(t[0]),geometries:t}),cutter:JSON.stringify(r)}},a=await Object(l.default)(s.path+"/cut",o),{cutIndexes:c,geometries:u=[]}=a.data;return{cutIndexes:c,geometries:u.map((e=>{const t=Object(f.a)(e);return t.spatialReference=i,t}))}}(this.url,e,t,r)}densify(e,t){return async function(e,t,r){const n=t.geometries[0].spatialReference,s=Object(O.c)(e),i={...s.query,f:"json",...t.toJSON()},o=Object(O.a)(i,r);return Object(l.default)(s.path+"/densify",o).then((({data:e})=>(e.geometries||[]).map((e=>Object(f.a)(e).set({spatialReference:n})))))}(this.url,e,t)}difference(e,t,r){return async function(e,t,r,n){const s=t[0].spatialReference,i=Object(O.c)(e);let o={query:{...i.query,f:"json",sr:JSON.stringify(s.toJSON()),geometries:JSON.stringify(N(t)),geometry:JSON.stringify({geometryType:Object(f.c)(r),geometry:r.toJSON()})}};return n&&(o={...n,...o}),Object(l.default)(i.path+"/difference",o).then((({data:e})=>(e.geometries||[]).map((e=>Object(f.a)(e).set({spatialReference:s})))))}(this.url,e,t,r)}distance(e,t){return async function(e,t,r){const n=Object(O.c)(e),s={...n.query,f:"json",...t.toJSON()},i=Object(O.a)(s,r);return Object(l.default)(n.path+"/distance",i).then((({data:e})=>e&&e.distance))}(this.url,e,t)}fromGeoCoordinateString(e,t){return async function(e,t,r){const n={};null!=t.sr&&"object"==typeof t.sr?n.sr=t.sr.wkid||JSON.stringify(t.sr):n.sr=t.sr,n.strings=JSON.stringify(t.strings);const s=t.conversionType||"mgrs";n.conversionType=j.toJSON(s),n.conversionMode=t.conversionMode;const i=Object(O.c)(e),o={...i.query,f:"json",...n},a=Object(O.a)(o,r);return Object(l.default)(i.path+"/fromGeoCoordinateString",a).then((({data:e})=>e.coordinates))}(this.url,e,t)}generalize(e,t){return async function(e,t,r){const n=(t=g.from(t)).toJSON(),s=function(e){const{geometries:t,deviationUnit:r,maxDeviation:n}=e.toJSON(),s={maxDeviation:n};return t&&t.length&&(s.geometries=JSON.stringify({geometryType:Object(f.c)(t[0]),geometries:t}),s.sr=JSON.stringify(t[0].spatialReference)),b.write(r,s,"deviationUnit"),s}(t),i=Object(O.c)(e),o={...i.query,f:"json",...s},a=n.geometries[0].spatialReference,c=Object(O.a)(o,r);return Object(l.default)(i.path+"/generalize",c).then((({data:e})=>(e.geometries||[]).map((e=>Object(f.a)(e).set({spatialReference:a})))))}(this.url,e,t)}intersect(e,t,r){return async function(e,t,r,n){const s=t[0].spatialReference,i=Object(O.c)(e),o={...i.query,f:"json",sr:JSON.stringify(s.toJSON()),geometries:JSON.stringify(N(t)),geometry:JSON.stringify({geometryType:Object(f.c)(r),geometry:r.toJSON()})},a=Object(O.a)(o,n);return Object(l.default)(i.path+"/intersect",a).then((({data:e})=>(e.geometries||[]).map((e=>Object(f.a)(e).set({spatialReference:s})))))}(this.url,e,t,r)}labelPoints(e,t){return function(e,t,r){const n=t.map((e=>e.toJSON())),s=t[0].spatialReference,i=Object(O.c)(e),o={...i.query,f:"json",sr:s.wkid?s.wkid:JSON.stringify(s.toJSON()),polygons:JSON.stringify(n)},a=Object(O.a)(o,r);return Object(l.default)(i.path+"/labelPoints",a).then((({data:e})=>(e.labelPoints||[]).map((e=>Object(f.a)(e).set({spatialReference:s})))))}(this.url,e,t)}lengths(e,t){return async function(e,t,r){const n=function(e){const{polylines:t,lengthUnit:r,geodesic:n,calculationType:s}=e.toJSON(),i={};i.polylines=JSON.stringify(t);const o=e.polylines[0].spatialReference;return i.sr=o.wkid?o.wkid:JSON.stringify(o.toJSON()),r&&(i.lengthUnit=r),n&&(i.geodesic=n),s&&(i.calculationType=S.toJSON(s)),i}(t=_.from(t)),s=Object(O.c)(e),i={...s.query,f:"json",...n},o=Object(O.a)(i,r);return Object(l.default)(s.path+"/lengths",o).then((({data:e})=>e))}(this.url,e,t)}offset(e,t){return async function(e,t,r){const n=function(e){const{geometries:t,bevelRatio:r,offsetDistance:n,offsetHow:s,offsetUnit:i}=e.toJSON(),o={bevelRatio:r,offsetDistance:n};return t&&t.length&&(o.geometries=JSON.stringify({geometryType:Object(f.c)(t[0]),geometries:t}),o.sr=JSON.stringify(t[0].spatialReference)),s&&(o.offsetHow=R.toJSON(s)),i&&(o.offsetUnit=h.toJSON(i)),o}(t=E.from(t)),s=Object(O.c)(e),i={...s.query,f:"json",...n},o=t.geometries[0].spatialReference,a=Object(O.a)(i,r);return Object(l.default)(s.path+"/offset",a).then((({data:e})=>(e.geometries||[]).map((e=>Object(f.a)(e).set({spatialReference:o})))))}(this.url,e,t)}project(e,t){return async function(e,t,r){t=v(t);const n=Object(O.c)(e),s={...n.query,f:"json",...t.toJSON()},i=t.outSpatialReference,o=Object(f.c)(t.geometries[0]),a=Object(O.a)(s,r);return Object(l.default)(n.path+"/project",a).then((({data:{geometries:e}})=>p(e,o,i)))}(this.url,e,t)}relation(e,t){return async function(e,t,r){const n=function(e){const{geometries1:t,geometries2:r,relation:n,relationParameter:s}=e.toJSON(),i={};if(t&&t.length){i.geometries1=JSON.stringify({geometryType:Object(f.c)(t[0]),geometries:t});const e=t[0].spatialReference;i.sr=e.wkid?e.wkid:JSON.stringify(e)}return r&&r.length>0&&(i.geometries2=JSON.stringify({geometryType:Object(f.c)(r[0]),geometries:r})),n&&(i.relation=w.toJSON(n)),s&&(i.relationParam=s),i}(t=C.from(t)),s=Object(O.c)(e),i={...s.query,f:"json",...n},o=Object(O.a)(i,r);return Object(l.default)(s.path+"/relation",o).then((({data:e})=>e.relations))}(this.url,e,t)}reshape(e,t,r){return async function(e,t,r,n){const s=t.spatialReference,i=Object(O.c)(e),o={...i.query,f:"json",sr:JSON.stringify(s.toJSON()),target:JSON.stringify({geometryType:Object(f.c)(t),geometry:t.toJSON()}),reshaper:JSON.stringify(r.toJSON())},a=Object(O.a)(o,n);return Object(l.default)(i.path+"/reshape",a).then((({data:e})=>Object(f.a)(e.geometry).set({spatialReference:s})))}(this.url,e,t,r)}simplify(e,t){return async function(e,t,r){const n="string"==typeof e?Object(a.I)(e):e,s=t[0].spatialReference,i=Object(f.c)(t[0]),o={...r,query:{...n.query,f:"json",sr:s.wkid?s.wkid:JSON.stringify(s),geometries:JSON.stringify(N(t))}},{data:c}=await Object(l.default)(n.path+"/simplify",o);return p(c.geometries,i,s)}(this.url,e,t)}toGeoCoordinateString(e,t){return async function(e,t,r){const n={};null!=t.sr&&"object"==typeof t.sr?n.sr=t.sr.wkid||JSON.stringify(t.sr):n.sr=t.sr,n.coordinates=JSON.stringify(t.coordinates);const s=t.conversionType||"mgrs";n.conversionType=j.toJSON(s),n.conversionMode=t.conversionMode,n.numOfDigits=t.numOfDigits,n.rounding=t.rounding,n.addSpaces=t.addSpaces;const i=Object(O.c)(e),o={...i.query,f:"json",...n},a=Object(O.a)(o,r);return Object(l.default)(i.path+"/toGeoCoordinateString",a).then((({data:e})=>e.strings))}(this.url,e,t)}trimExtend(e,t){return async function(e,t,r){const n=function(e){const{extendHow:t,polylines:r,trimExtendTo:n}=e.toJSON(),s={};return s.extendHow=L.toJSON(t),r&&r.length&&(s.polylines=JSON.stringify(r),s.sr=JSON.stringify(r[0].spatialReference)),n&&(s.trimExtendTo=JSON.stringify(n)),s}(t=q.from(t)),s=Object(O.c)(e),i={...s.query,f:"json",...n},o=t.sr,a=Object(O.a)(i,r);return Object(l.default)(s.path+"/trimExtend",a).then((({data:e})=>(e.geometries||[]).map((({paths:e})=>new T.a({spatialReference:o,paths:e})))))}(this.url,e,t)}union(e,t){return async function(e,t,r){const n=t[0].spatialReference,s=Object(O.c)(e),i={...s.query,f:"json",sr:JSON.stringify(n.toJSON()),geometries:JSON.stringify(N(t))},o=Object(O.a)(i,r);return Object(l.default)(s.path+"/union",o).then((({data:e})=>Object(f.a)(e.geometry).set({spatialReference:n})))}(this.url,e,t)}};x.UNIT_METER=9001,x.UNIT_GERMAN_METER=9031,x.UNIT_FOOT=9002,x.UNIT_SURVEY_FOOT=9003,x.UNIT_CLARKE_FOOT=9005,x.UNIT_FATHOM=9014,x.UNIT_NAUTICAL_MILE=9030,x.UNIT_SURVEY_CHAIN=9033,x.UNIT_SURVEY_LINK=9034,x.UNIT_SURVEY_MILE=9035,x.UNIT_KILOMETER=9036,x.UNIT_CLARKE_YARD=9037,x.UNIT_CLARKE_CHAIN=9038,x.UNIT_CLARKE_LINK=9039,x.UNIT_SEARS_YARD=9040,x.UNIT_SEARS_FOOT=9041,x.UNIT_SEARS_CHAIN=9042,x.UNIT_SEARS_LINK=9043,x.UNIT_BENOIT_1895A_YARD=9050,x.UNIT_BENOIT_1895A_FOOT=9051,x.UNIT_BENOIT_1895A_CHAIN=9052,x.UNIT_BENOIT_1895A_LINK=9053,x.UNIT_BENOIT_1895B_YARD=9060,x.UNIT_BENOIT_1895B_FOOT=9061,x.UNIT_BENOIT_1895B_CHAIN=9062,x.UNIT_BENOIT_1895B_LINK=9063,x.UNIT_INDIAN_FOOT=9080,x.UNIT_INDIAN_1937_FOOT=9081,x.UNIT_INDIAN_1962_FOOT=9082,x.UNIT_INDIAN_1975_FOOT=9083,x.UNIT_INDIAN_YARD=9084,x.UNIT_INDIAN_1937_YARD=9085,x.UNIT_INDIAN_1962_YARD=9086,x.UNIT_INDIAN_1975_YARD=9087,x.UNIT_FOOT_1865=9070,x.UNIT_RADIAN=9101,x.UNIT_DEGREE=9102,x.UNIT_ARCMINUTE=9103,x.UNIT_ARCSECOND=9104,x.UNIT_GRAD=9105,x.UNIT_GON=9106,x.UNIT_MICRORADIAN=9109,x.UNIT_ARCMINUTE_CENTESIMAL=9112,x.UNIT_ARCSECOND_CENTESIMAL=9113,x.UNIT_MIL6400=9114,x.UNIT_BRITISH_1936_FOOT=9095,x.UNIT_GOLDCOAST_FOOT=9094,x.UNIT_INTERNATIONAL_CHAIN=109003,x.UNIT_INTERNATIONAL_LINK=109004,x.UNIT_INTERNATIONAL_YARD=109001,x.UNIT_STATUTE_MILE=9093,x.UNIT_SURVEY_YARD=109002,x.UNIT_50KILOMETER_LENGTH=109030,x.UNIT_150KILOMETER_LENGTH=109031,x.UNIT_DECIMETER=109005,x.UNIT_CENTIMETER=109006,x.UNIT_MILLIMETER=109007,x.UNIT_INTERNATIONAL_INCH=109008,x.UNIT_US_SURVEY_INCH=109009,x.UNIT_INTERNATIONAL_ROD=109010,x.UNIT_US_SURVEY_ROD=109011,x.UNIT_US_NAUTICAL_MILE=109012,x.UNIT_UK_NAUTICAL_MILE=109013,x.UNIT_SQUARE_INCHES="esriSquareInches",x.UNIT_SQUARE_FEET="esriSquareFeet",x.UNIT_SQUARE_YARDS="esriSquareYards",x.UNIT_ACRES="esriAcres",x.UNIT_SQUARE_MILES="esriSquareMiles",x.UNIT_SQUARE_MILLIMETERS="esriSquareMillimeters",x.UNIT_SQUARE_CENTIMETERS="esriSquareCentimeters",x.UNIT_SQUARE_DECIMETERS="esriSquareDecimeters",x.UNIT_SQUARE_METERS="esriSquareMeters",x.UNIT_ARES="esriAres",x.UNIT_HECTARES="esriHectares",x.UNIT_SQUARE_KILOMETERS="esriSquareKilometers",Object(n.a)([Object(i.b)()],x.prototype,"url",void 0),x=Object(n.a)([Object(o.a)("esri.tasks.GeometryService")],x);var G=x;t.default=G},66:function(e,t,r){"use strict";r.d(t,"a",(function(){return s})),r.d(t,"b",(function(){return o})),r.d(t,"c",(function(){return i}));var n=r(21);function s(e,t){let r={query:e};return t&&(r={...t,...r},r.query={...r.query,...t.query}),r}function i(e){return"string"==typeof e?Object(n.I)(e):e}function o(e,t,r){const n={};for(const s in e){if("declaredClass"===s)continue;const i=e[s];if(null!=i&&"function"!=typeof i)if(Array.isArray(i)){n[s]=[];for(let e=0;e<i.length;e++)n[s][e]=o(i[e])}else if("object"==typeof i)if(i.toJSON){const e=i.toJSON(r&&r[s]);n[s]=t?e:JSON.stringify(e)}else n[s]=t?i:JSON.stringify(i);else n[s]=i}return n}}});