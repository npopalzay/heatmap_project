(self.webpackChunkgeog863_final=self.webpackChunkgeog863_final||[]).push([[8988],{65900:(e,t,o)=>{"use strict";o.r(t),o.d(t,{default:()=>M});var r=o(87397),i=(o(1867),o(18575)),l=o(18029),s=(o(9783),o(9385),o(82203)),n=o(23757),a=o(65482),p=o(17593),y=(o(15392),o(11786),o(77374)),u=o(44765),d=o(65869),c=o(5990),S=o(4129),h=o(72593),f=(o(72769),o(71604)),b=o(47596),v=o(72046),C=o(4425),g=o(17398),m=o(80157),_=o(91081),R=o(17060);const k=["atom","xml"],w={base:y.Z,key:"type",typeMap:{"simple-line":u.default},errorContext:"symbol"},F={base:y.Z,key:"type",typeMap:{"picture-marker":c.Z,"simple-marker":h.default},errorContext:"symbol"},j={base:y.Z,key:"type",typeMap:{"simple-fill":S.default},errorContext:"symbol"};let x=class extends((0,g.h)((0,_.Q)((0,C.q)((0,m.I)((0,R.M)((0,b.R)(f.Z))))))){constructor(...e){super(...e),this.description=null,this.legendEnabled=!0,this.lineSymbol=null,this.pointSymbol=null,this.polygonSymbol=null,this.operationalLayerType="GeoRSS",this.outSpatialReference=null,this.url=null,this.type="geo-rss"}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}get title(){const e=this._get("title");return e&&"defaults"!==this.originOf("title")?e:this.url?(0,p.vt)(this.url,k)||"GeoRSS":e||""}set title(e){this._set("title",e)}readFeatureCollections(e,t){return t.featureCollection.layers.forEach((e=>{const t=e.layerDefinition.drawingInfo.renderer.symbol;t&&"esriSFS"===t.type&&t.outline&&-1!==t.outline.style.indexOf("esriSFS")&&(t.outline.style="esriSLSSolid")})),t.featureCollection.layers}load(e){const t=(0,l.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service","Feature Service","Feature Collection","Scene Service"]},e).then((()=>this._fetchService(t)),(()=>this._fetchService(t)))),Promise.resolve(this)}async _fetchService(e){const{data:t}=await(0,d.default)(i.Z.geoRSSServiceUrl,{query:{url:this.url,refresh:!!this.loaded||void 0,outSR:this.outSpatialReference?JSON.stringify(this.outSpatialReference.toJSON()):void 0},signal:e});this.read(t,{origin:"service"})}};(0,r._)([(0,s.Cb)()],x.prototype,"description",void 0),(0,r._)([(0,s.Cb)({json:{origins:{service:{read:{source:"name",reader:e=>e||void 0}}}}})],x.prototype,"title",null),(0,r._)([(0,s.Cb)()],x.prototype,"featureCollections",void 0),(0,r._)([(0,n.r)("service","featureCollections",["featureCollection.layers"])],x.prototype,"readFeatureCollections",null),(0,r._)([(0,s.Cb)(v.id)],x.prototype,"id",void 0),(0,r._)([(0,s.Cb)(v.rn)],x.prototype,"legendEnabled",void 0),(0,r._)([(0,s.Cb)({types:w,json:{write:!0}})],x.prototype,"lineSymbol",void 0),(0,r._)([(0,s.Cb)({type:["show","hide"]})],x.prototype,"listMode",void 0),(0,r._)([(0,s.Cb)({types:F,json:{write:!0}})],x.prototype,"pointSymbol",void 0),(0,r._)([(0,s.Cb)({types:j,json:{write:!0}})],x.prototype,"polygonSymbol",void 0),(0,r._)([(0,s.Cb)({type:["GeoRSS"]})],x.prototype,"operationalLayerType",void 0),(0,r._)([(0,s.Cb)()],x.prototype,"outSpatialReference",void 0),(0,r._)([(0,s.Cb)(v.HQ)],x.prototype,"url",void 0),(0,r._)([(0,s.Cb)({readOnly:!0,json:{read:!1},value:"geo-rss"})],x.prototype,"type",void 0),x=(0,r._)([(0,a.j)("esri.layers.GeoRSSLayer")],x);const M=x}}]);