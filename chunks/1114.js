(self.webpackChunkgeog863_final=self.webpackChunkgeog863_final||[]).push([[1114],{30900:(e,t,s)=>{"use strict";s.d(t,{U:()=>d});var i=s(85376),r=s(19517),n=s(11949),a=s(3414),o=s(41752),l=s(89751);function d(e){if(!e)return null;if("mesh"===e.type)return e.toJSON();let t=null;const s=e.spatialReference,o=(0,i.C5)(s);if(!o)return e.toJSON();const d=s.isWebMercator?102100:4326,u=l.UZ[d].maxX,f=l.UZ[d].minX,p=l.UZ[d].plus180Line,g=l.UZ[d].minus180Line;let _;const x=e.toJSON();if((0,a.wp)(x))_=c(x,u,f);else if((0,a.aW)(x))x.points=x.points.map((e=>c(e,u,f))),_=x;else if((0,a.YX)(x))_=h(x,o);else if((0,a.oU)(x)||(0,a.l9)(x)){const e=y;(0,n.$P)(e,x);const s={xmin:e[0],ymin:e[1],xmax:e[2],ymax:e[3]},i=(0,l.XZ)(s.xmin,f)*(2*u),a=0===i?x:function(e,t){const s=(0,l.x3)(e);for(const e of s)for(const s of e)s[0]+=t;return e}(x,i);s.xmin+=i,s.xmax+=i,(0,r.jQ)(s,p)&&s.xmax!==u||(0,r.jQ)(s,g)&&s.xmin!==f?t=a:_=a}else _=e.toJSON();return null!==t?(new m).cut(t,u):_}function h(e,t){if(!t)return e;const s=function(e,t){const s=[],{ymin:i,ymax:r}=e,n=e.xmax-e.xmin,a=e.xmin,o=e.xmax;let l;const[d,h]=t.valid;l=u(e.xmin,t);const c=l.x,p=l.frameId;l=u(e.xmax,t);const m=l.x,y=l.frameId,g=c===m&&n>0;if(n>2*h){const e={xmin:a<o?c:m,ymin:i,xmax:h,ymax:r},t={xmin:d,ymin:i,xmax:a<o?m:c,ymax:r},n={xmin:0,ymin:i,xmax:h,ymax:r},l={xmin:d,ymin:i,xmax:0,ymax:r},u=[],g=[];f(e,n)&&u.push(p),f(e,l)&&g.push(p),f(t,n)&&u.push(y),f(t,l)&&g.push(y);for(let e=p+1;e<y;e++)u.push(e),g.push(e);s.push({extent:e,frameIds:[p]},{extent:t,frameIds:[y]},{extent:n,frameIds:u},{extent:l,frameIds:g})}else c>m||g?s.push({extent:{xmin:c,ymin:i,xmax:h,ymax:r},frameIds:[p]},{extent:{xmin:d,ymin:i,xmax:m,ymax:r},frameIds:[y]}):s.push({extent:{xmin:c,ymin:i,xmax:m,ymax:r},frameIds:[p]});return s}(e,t).map((e=>e.extent));return s.length<2?s[0]||e:s.length>2?(e.xmin=t.valid[0],e.xmax=t.valid[1],e):{rings:s.map((e=>[[e.xmin,e.ymin],[e.xmin,e.ymax],[e.xmax,e.ymax],[e.xmax,e.ymin],[e.xmin,e.ymin]]))}}function c(e,t,s){if(Array.isArray(e)){const i=e[0];if(i>t){const s=(0,l.XZ)(i,t);e[0]=i+s*(-2*t)}else if(i<s){const t=(0,l.XZ)(i,s);e[0]=i+t*(-2*s)}}else{const i=e.x;if(i>t){const s=(0,l.XZ)(i,t);e.x+=s*(-2*t)}else if(i<s){const t=(0,l.XZ)(i,s);e.x+=t*(-2*s)}}return e}function u(e,t){const[s,i]=t.valid,r=2*i;let n,a=0;return e>i?(n=Math.ceil(Math.abs(e-i)/r),e-=n*r,a=n):e<s&&(n=Math.ceil(Math.abs(e-s)/r),e+=n*r,a=-n),{x:e,frameId:a}}function f(e,t){const{xmin:s,ymin:i,xmax:r,ymax:n}=t;return p(e,s,i)&&p(e,s,n)&&p(e,r,n)&&p(e,r,i)}function p(e,t,s){return t>=e.xmin&&t<=e.xmax&&s>=e.ymin&&s<=e.ymax}class m{cut(e,t){let s;if(e.rings)this.closed=!0,s=e.rings,this.minPts=4;else{if(!e.paths)return null;this.closed=!1,s=e.paths,this.minPts=2}const i=s.length,r=-2*t;for(let e=0;e<i;e++){const t=s[e];if(t&&t.length>=this.minPts){const e=[];for(const s of t)e.push([s[0]+r,s[1]]);s.push(e)}}return this.closed?e.rings=s:e.paths=s,e}}const y=(0,o.Ue)()},61876:(e,t,s)=>{"use strict";s.d(t,{T:()=>I});var i=s(14790),r=s(45450),n=s(1867),a=s(18029),o=s(9783),l=s(29107),d=s(33142),h=(s(83852),s(17734),s(74271)),c=s(49922),u=s(77246),f=s(96e3);const p=o.Z.getLogger("esri.views.2d.engine.webgl.AttributeStoreView"),m=(0,f.g)(f.J,p),y=e=>2147483647&e;class g{constructor(e,t,s){this._texture=null,this._lastTexture=null,this._fbos={},this.texelSize=4;const{buffer:i,pixelType:r,textureOnly:n}=e,o=(0,u.UK)(r);this.shared=s,this.pixelType=r,this.size=t,this.textureOnly=n,n||(this.data=new o((0,a.Wg)(i))),this._resetRange()}destroy(){(0,a.Po)(this._texture,(e=>e.dispose()));for(const e in this._fbos)(0,a.Po)(this._fbos[e],(t=>{"0"===e&&t.detachColorTexture(),t.dispose()})),this._fbos[e]=null;this._texture=null}get _textureDesc(){return{target:3553,wrapMode:33071,pixelFormat:6408,dataType:this.pixelType,samplingMode:9728,width:this.size,height:this.size}}setData(e,t,s){const i=y(e),r=(0,a.Wg)(this.data),n=i*this.texelSize+t;!r||n>=r.length||(r[n]=s,this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,i))}getData(e,t){if((0,a.Wi)(this.data))return null;const s=y(e)*this.texelSize+t;return!this.data||s>=this.data.length?null:this.data[s]}getTexture(e){return(0,a.Pt)(this._texture,(()=>this._initTexture(e)))}getFBO(e,t=0){if((0,a.Wi)(this._fbos[t])){const s={colorTarget:0,depthStencilTarget:0},i=0===t?this.getTexture(e):this._textureDesc;this._fbos[t]=new c.Z(e,s,i)}return this._fbos[t]}get locked(){return!(5121!==this.pixelType||!this.shared||this.textureOnly||!(0,n.Z)("esri-atomics")||!this.data)&&1===Atomics.load(this.data,0)}updateTexture(e){if(!this.locked)try{const t=this.dirtyStart,s=this.dirtyEnd;if(t>s)return;this._resetRange();const i=(0,a.Wg)(this.data).buffer,r=this.getTexture(e),n=4,o=(t-t%this.size)/this.size,d=(s-s%this.size)/this.size,h=o,c=this.size,f=d,m=o*this.size*n,y=(c+f*this.size)*n-m,g=(0,u.UK)(this.pixelType),_=g.BYTES_PER_ELEMENT;try{new g(i,m*_,y)}catch(e){}const x=new g(i,m*_,y),v=this.size,b=f-h+1;if(b>this.size)return void p.error(new l.Z("mapview-webgl","Out-of-bounds index when updating AttributeData"));r.updateData(0,0,h,v,b,x)}catch(e){}}update(e){const{data:t,start:s,end:i}=e;if((0,a.pC)(t)){const i=this.data,r=s*this.texelSize;for(let s=0;s<t.length;s++){const n=1<<s%this.texelSize;e.layout&n&&(i[r+s]=t[s])}}this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,i)}resize(e,t){const s=this.size;if(this.size=t,this.textureOnly)return void(s!==this.size&&(this._lastTexture=this._texture,this._texture=null));const i=(0,u.UK)(this.pixelType);this.destroy(),this.data=new i((0,a.Wg)(e.buffer))}_resetRange(){this.dirtyStart=2147483647,this.dirtyEnd=0}_initTexture(e){const t=new h.Z(e,this._textureDesc,(0,a.Pt)(this.data,void 0));if((0,a.pC)(this._lastTexture)&&this._fbos[0]){const s=this._lastTexture.descriptor.width,i=this._lastTexture.descriptor.height,r=this._lastTexture.descriptor.dataType,n=this._lastTexture.descriptor.pixelFormat,a=this.getFBO(e),o=(0,u.Yw)(r),l=new((0,u.UK)(r))(new ArrayBuffer(s*i*o*this.texelSize)),d=e.getBoundFramebufferObject(),{x:h,y:c,width:f,height:p}=e.getViewport();e.bindFramebuffer(a),a.readPixels(0,0,s,i,n,r,l),t.updateData(0,0,0,2*s,i/2,l),e.setViewport(h,c,f,p),e.bindFramebuffer(d)}return this.destroy(),this._texture=t,this._texture}}class _{constructor(e){this._onUpdate=e,this._initialized=!1,this._forceNextUpload=!1,this._locked=!1}initialize(e){const{blocks:t,shared:s,size:i}=e;if(this.shared=s,this.size=i,m("Initializing AttributeStoreView",e),(0,a.Wi)(this._data))this._data=(0,a.Fd)(t,(e=>new g(e,i,s)));else for(let e=0;e<this._data.length;e++){const r=this._data[e],n=t[e];(0,a.pC)(n)&&((0,a.Wi)(r)?this._data[e]=new g(n,i,s):r.resize(n,i))}this._initialized=!0}destroy(){(0,a.Po)(this._data,(e=>(0,a.Fd)(e,(e=>e.destroy())))),(0,a.Po)(this._defaultTexture,(e=>e.dispose()))}getBlock(e){return(0,a.Wi)(this._data)?null:this._data[e]}setLabelMinZoom(e,t){this.setData(e,0,1,t)}getLabelMinZoom(e){return this.getData(e,0,1,255)}getFilterFlags(e){return this.getData(e,0,0,0)}getVVSize(e){return this.getData(e,d.aK,0,0)}getData(e,t,s,i){if(!this._data)return 0;const r=(0,a.Wg)(this._data)[t];if((0,a.Wi)(r))return 0;const n=r.getData(e,s);return(0,a.pC)(n)?n:i}setData(e,t,s,i){const r=(0,a.Wg)(this._data)[t];(0,a.Wg)(r).setData(e,s,i)}lockTextureUpload(){this._locked=!0}unlockTextureUpload(){this._locked=!1}forceTextureUpload(){this._forceNextUpload=!0}async requestUpdate(e){if(this._pendingAttributeUpdate)return void p.error(new l.Z("mapview-webgl","Tried to update attribute data with a pending update"));const t=(0,i.hh)();return m("AttributeStoreView Update Requested",e),this._pendingAttributeUpdate={data:e,resolver:t},t.promise}update(){if(this._initialized&&(this._onUpdate(),(0,a.pC)(this._pendingAttributeUpdate))){const{data:e,resolver:t}=this._pendingAttributeUpdate,s=(0,a.Wg)(this._data);for(let t=0;t<e.blocks.length;t++){const i=e.blocks[t],r=s[t];(0,a.Po)(r,(e=>(0,a.Po)(i,(s=>{m(`Updating block ${t}`,s),e.update(s)}))))}this._pendingAttributeUpdate=null,t()}}bindTextures(e){this.update();const t=this._getDefaultTexture(e);if(!this._initialized)return e.bindTexture(t,d.iJ),e.bindTexture(t,d.nM),e.bindTexture(t,d.Ij),void e.bindTexture(t,d.f2);const s=(0,a.Wg)(this._data);this._locked&&!this._forceNextUpload||((0,a.JR)(s,(t=>t.updateTexture(e))),this._forceNextUpload=!1),e.bindTexture((0,a.R2)(s[0],t,(t=>t.getTexture(e))),d.iJ),e.bindTexture((0,a.R2)(s[1],t,(t=>t.getTexture(e))),d.nM),e.bindTexture((0,a.R2)(s[2],t,(t=>t.getTexture(e))),d.Ij),e.bindTexture((0,a.R2)(s[3],t,(t=>t.getTexture(e))),d.f2)}_getDefaultTexture(e){if((0,a.Wi)(this._defaultTexture)){const t={wrapMode:33071,pixelFormat:6408,dataType:5121,samplingMode:9728,width:1,height:1};this._defaultTexture=new h.Z(e,t,new Uint8Array(4))}return this._defaultTexture}}var x=s(54450),v=s(52684),b=s(15982),w=s(66281),D=s(32818),T=s(47282);function C(e,t){const s=t.length;if(e<t[0].value||1===s)return t[0].size;for(let i=1;i<s;i++)if(e<t[i].value){const s=(e-t[i-1].value)/(t[i].value-t[i-1].value);return t[i-1].size+s*(t[i].size-t[i-1].size)}return t[s-1].size}function B(e,t,s=0){if((0,a.Wi)(t))return e[s+0]=0,e[s+1]=0,e[s+2]=0,void(e[s+3]=0);const{r:i,g:r,b:n,a:o}=t;e[s+0]=i*o/255,e[s+1]=r*o/255,e[s+2]=n*o/255,e[s+3]=o}class F{constructor(){this.symbolLevels=[],this.vvColorValues=new Float32Array(8),this.vvColors=new Float32Array(32),this.vvOpacityValues=new Float32Array(8),this.vvOpacities=new Float32Array(8),this.vvSizeMinMaxValue=new Float32Array(4),this.ddColors=new Float32Array(32),this.ddBackgroundColor=new Float32Array(4),this.ddActiveDots=new Float32Array(8),this._vvMaterialParameters={vvSizeEnabled:!1,vvColorEnabled:!1,vvRotationEnabled:!1,vvRotationType:"geographic",vvOpacityEnabled:!1}}getSizeVVFieldStops(e){const t=this._vvSizeFieldStops;switch(t.type){case"static":return t;case"level-dependent":return(0,a.Pt)(t.levels[e],(()=>{let s=1/0,i=0;for(const r in t.levels){const t=parseFloat(r),n=Math.abs(e-t);n<s&&(s=n,i=t)}if(s===1/0)return{sizes:new Float32Array([0,0,0,0,0,0]),values:new Float32Array([0,0,0,0,0,0])};const r=2**((e-i)/2),n=(0,a.Wg)(t.levels[i]),o=new Float32Array(n.values);return o[2]*=r,o[3]*=r,{sizes:(0,a.Wg)(n.sizes),values:o}}))}}get vvMaterialParameters(){return this._vvMaterialParameters}update(e){(0,a.pC)(this._vvInfo)&&this._updateVisualVariables(this._vvInfo.vvRanges,e)}setInfo(e,t,s){switch((0,a.pC)(s)&&s.forEach((e=>this._updateEffects(e))),this._vvInfo=t,e.type){case"dot-density":this._updateDotDensityInfo(e)}}getVariation(){return{ddDotBlending:this.ddDotBlending,outsideLabelsVisible:this.outsideLabelsVisible,oesTextureFloat:(0,T.Z)().supportsTextureFloat}}getVariationHash(){return(this.ddDotBlending?1:0)|(this.outsideLabelsVisible?1:0)<<1}_updateEffects(e){(0,a.pC)(e)&&e.filter&&e.filter.enabled&&(this.outsideLabelsVisible=e.excludedLabelsVisible)}_updateVisualVariables(e,t){const s=this._vvMaterialParameters;if(s.vvOpacityEnabled=!1,s.vvSizeEnabled=!1,s.vvColorEnabled=!1,s.vvRotationEnabled=!1,!e)return;const i=e.size;if(i){if(s.vvSizeEnabled=!0,i.minMaxValue){const e=i.minMaxValue;let s,r;if((0,u.$K)(e.minSize)&&(0,u.$K)(e.maxSize))if((0,u.hj)(e.minSize)&&(0,u.hj)(e.maxSize))s=(0,b.F2)(e.minSize),r=(0,b.F2)(e.maxSize);else{const i=t.scale;s=(0,b.F2)(C(i,e.minSize.stops)),r=(0,b.F2)(C(i,e.maxSize.stops))}this.vvSizeMinMaxValue.set([e.minDataValue,e.maxDataValue,s,r])}if(i.scaleStops&&(this.vvSizeScaleStopsValue=(0,b.F2)(C(t.scale,i.scaleStops.stops))),i.unitValue){const e=(0,w.c9)(t.spatialReference)/D.a[i.unitValue.unit];this.vvSizeUnitValueToPixelsRatio=e/t.resolution}i.fieldStops&&(this._vvSizeFieldStops=i.fieldStops)}const r=e.color;r&&(s.vvColorEnabled=!0,this.vvColorValues.set(r.values),this.vvColors.set(r.colors));const n=e.opacity;n&&(s.vvOpacityEnabled=!0,this.vvOpacityValues.set(n.values),this.vvOpacities.set(n.opacities));const a=e.rotation;a&&(s.vvRotationEnabled=!0,s.vvRotationType=a.type)}_updateDotDensityInfo(e){const t=e.attributes;this.ddDotValue=e.dotValue,this.ddDotScale=e.referenceScale,this.ddDotSize=e.dotSize,this.ddDotBlending=e.dotBlendingEnabled,this.ddSeed=e.seed;for(let e=0;e<d.$0;e++){const s=e>=t.length?new v.Z([0,0,0,0]):t[e].color;B(this.ddColors,s,4*e)}for(let t=0;t<8;t++)this.ddActiveDots[t]=t<e.attributes.length?1:0;B(this.ddBackgroundColor,e.backgroundColor)}}class I extends x.Z{constructor(e){super(e),this._rendererInfo=new F,this._materialItemsRequestQueue=new r.Z,this.attributeView=new _((()=>this.onAttributeStoreUpdate()))}destroy(){this.removeAllChildren(),this.children.forEach((e=>e.destroy())),this.attributeView.destroy(),this._materialItemsRequestQueue.clear()}setRendererInfo(e,t,s){this._rendererInfo.setInfo(e,t,s),this.requestRender()}async getMaterialItems(e,t){if(!e||0===e.length)return null;const s=(0,i.hh)();return this._materialItemsRequestQueue.push({items:e,abortOptions:t,resolver:s}),this.requestRender(),s.promise}doRender(e){if(e.context.capabilities.enable("textureFloat"),e.context.capabilities.enable("vao"),this._materialItemsRequestQueue.length>0){let t=this._materialItemsRequestQueue.pop();for(;t;)this._processMaterialItemRequest(e,t),t=this._materialItemsRequestQueue.pop()}super.doRender(e)}renderChildren(e){for(const t of this.children)t.commit(e);this._rendererInfo.update(e.state),super.renderChildren(e)}createRenderParams(e){return{...super.createRenderParams(e),rendererInfo:this._rendererInfo,attributeView:this.attributeView}}onAttributeStoreUpdate(){}_processMaterialItemRequest(e,{items:t,abortOptions:s,resolver:i}){const{painter:r,pixelRatio:n}=e,a=t.map((e=>r.textureManager.rasterizeItem(e.symbol,n,e.glyphIds,s)));Promise.all(a).then((e=>{if(!this.stage)return void i.reject();const s=e.map(((e,s)=>({id:t[s].id,mosaicItem:e})));i.resolve(s)}),i.reject)}}},54450:(e,t,s)=>{"use strict";s.d(t,{Z:()=>d});var i=s(9963),r=s(49148),n=s(37926),a=s(49282);const o=(e,t)=>e.key.level-t.key.level!=0?e.key.level-t.key.level:e.key.row-t.key.row!=0?e.key.row-t.key.row:e.key.col-t.key.col;class l extends a.Z{constructor(e){super(),this._tileInfoView=e}get requiresDedicatedFBO(){return!1}renderChildren(e){this.sortChildren(o),this.setStencilReference(),super.renderChildren(e)}createRenderParams(e){const{state:t}=e;return{...super.createRenderParams(e),requiredLevel:this._tileInfoView.getClosestInfoForScale(t.scale).level,displayLevel:this._tileInfoView.tileInfo.scaleToZoom(t.scale)}}prepareRenderPasses(e){const t=e.registerRenderPass({name:"stencil",brushes:[n.Z],drawPhase:i.jx.DEBUG|i.jx.MAP|i.jx.HIGHLIGHT,target:()=>this.getStencilTarget()}),s=e.registerRenderPass({name:"tileInfo",brushes:[r.Z],drawPhase:i.jx.DEBUG,target:()=>this.children,has:"esri-tiles-debug"});return[...super.prepareRenderPasses(e),t,s]}getStencilTarget(){return this.children}updateTransforms(e){for(const t of this.children){const s=this._tileInfoView.getTileResolution(t.key);t.setTransform(e,s)}}setStencilReference(){let e=1;for(const t of this.children)t.stencilRef=e++}}const d=l},63329:(e,t,s)=>{"use strict";s.d(t,{I:()=>o}),s(1867);var i=s(51856),r=s(70473),n=s(84606),a=s(55290);class o extends a.s{constructor(e,t,s,i=s){super(),this.triangleCountReportedInDebug=0,this.transforms={dvs:(0,n.c)(),tileMat3:(0,n.c)()},this.triangleCount=0,this.key=new r.Z(e),this.bounds=t,this.size=s,this.coordRange=i}destroy(){this.texture&&(this.texture.dispose(),this.texture=null)}get coords(){return this._coords}get bounds(){return this._bounds}set bounds(e){this._coords=[e[0],e[3]],this._bounds=e}setTransform(e,t){const s=t/(e.resolution*e.pixelRatio),r=this.transforms.tileMat3,[n,a]=e.toScreenNoRotation([0,0],this.coords),o=this.size[0]/this.coordRange[0]*s,l=this.size[1]/this.coordRange[1]*s;(0,i.s)(r,o,0,0,0,l,0,n,a,1),(0,i.m)(this.transforms.dvs,e.displayViewMat3,r)}}},77773:(e,t,s)=>{"use strict";s.d(t,{o:()=>n});var i=s(33142),r=s(63329);class n extends r.I{constructor(e,t){super(e,t,[i.I_,i.I_])}}},83003:(e,t,s)=>{"use strict";s.d(t,{Z:()=>n});var i=s(61876);class r extends i.T{constructor(e){super(e)}get hasLabels(){return!1}get labelsVisible(){return!1}onTileData(e,t){e.patch(t),this.contains(e)||this.addChild(e),this.requestRender()}onTileError(e){e.clear(),this.contains(e)||this.addChild(e)}_renderChildren(e,t){for(const s of this.children)s.isReady&&s.hasData&&(s.commit(e),e.context.setStencilFunction(514,s.stencilRef,255),s._displayList.replay(e,s,t))}}const n=r},90215:(e,t,s)=>{"use strict";s.d(t,{Z:()=>Ye});var i=s(87397),r=s(1867),n=s(18029),a=(s(9783),s(9385),s(82203)),o=s(65482),l=(s(17593),s(15392),s(11786),s(14790)),d=s(83374),h=s(85376),c=s(12031),u=s(38283),f=s(10114),p=s(3414),m=s(15982),y=s(41752),g=s(33316),_=s(74893),x=s(33142),v=s(47282),b=s(30900),w=s(53372),D=s(84086),T=s(87147),C=s(77246);function B(e,t,s){if(!e.allDirty)if(null!=e.from&&null!=e.count){const i=Math.min(e.from,t),r=Math.max(e.from+e.count,t+s)-i;e.from=i,e.count=r}else e.from=t,e.count=s}const F=class{constructor(){this._dirties=(0,C.Mk)((()=>({indices:{from:null,count:null,allDirty:!1}})),(()=>({vertices:{from:null,count:null,allDirty:!1}})))}hasDirty(){for(const e of this._dirties)if(null!==e.data.indices.count||e.data.indices.allDirty)return!0;return!1}markAllClean(){for(const e of this._dirties){e.data.indices.from=null,e.data.indices.count=null,e.data.indices.allDirty=!1;for(const t in e.buffers)e.buffers[t].data.vertices.from=null,e.buffers[t].data.vertices.count=null,e.buffers[t].data.vertices.allDirty=!1}}markAllDirty(){for(const e of this._dirties){e.data.indices.allDirty=!0;for(const t in e.buffers)e.buffers[t].data.vertices.allDirty=!0}}forEach(e){for(let t=0;t<this._dirties.length;++t){const s=this._dirties[t],i={};for(const e in s.buffers){const t=s.buffers[e].data.vertices;(t.allDirty||null!=t.from&&null!=t.count&&t.count>0)&&(i[e]=t)}const r=s.data.indices;let n;n=r.allDirty||null!=r.from&&null!=r.count&&r.count>0?{indices:r,vertices:i}:{indices:null,vertices:i},(n.indices||Object.keys(n).length>0)&&e(n,t)}}markDirtyIndices(e,t,s){B(this._dirties[e].data.indices,t,s)}markDirtyVertices(e,t,s,i){B(this._dirties[e].buffers[t].data.vertices,s,i)}};class I{constructor(e){this._largestRange=null,this._parent=e,this._updateLargestRange()}get largestRange(){return this._largestRange}rangeCreated(e){(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}rangeResized(e,t){e===this._largestRange?e.count<t&&this._updateLargestRange():(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}findBestRange(e){let t=this._parent._freeHead,s=null;for(;null!==t;)t.count>=e&&(!s||t.count-e<s.count-e)&&(s=t),t=t.next;return s}findAdjacentRanges(e,t){let s=!0,i=!1,r=null,n=this._parent._freeHead;for(;s&&!i;){const a=null!==r?r.from+r.count:0,o=null!==n?n.from:this._parent._size;e>=a&&e+t<=o?(s=!1,i=!0):null!==n?(r=n,n=n.next):s=!1}return[r,n]}_updateLargestRange(){let e=null,t=this._parent._freeHead;for(;null!==t;)(!e||t.count>e.count)&&(e=t),t=t.next;this._largestRange=e}}class R{constructor(e,t){this._allocated=0,this._size=e,this._freeHead=e>0?{from:0,count:e,prev:null,next:null}:null,this._bookKeeper=t||new I(this),this._freeHead&&this._bookKeeper.rangeCreated(this._freeHead)}allocate(e){const t=this._bookKeeper.findBestRange(e);if(null===t)return-1;const s=t.from,i=t.count;if(t.from+=e,t.count-=e,this._bookKeeper.rangeResized(t,s,i),this._allocated+=e,0===t.count){const e=null!==t.prev?this._freeHead:t.next;R._removeRange(t),this._freeHead=e}return s}free(e,t){const[s,i]=this._bookKeeper.findAdjacentRanges(e,t),r={from:e,count:t,prev:s,next:i};if(null!==s&&(s.next=r),null!==i&&(i.prev=r),this._bookKeeper.rangeCreated(r),this._allocated-=t,null!==i&&r.from+r.count===i.from){const e=r.from,t=r.count;R._fuse(r,i),R._removeRange(i),this._bookKeeper.rangeResized(r,e,t),this._bookKeeper.rangeResized(i,void 0,0)}if(null!==s&&s.from+s.count===r.from){const e=s.from,t=s.count;R._fuse(s,r),R._removeRange(r),this._bookKeeper.rangeResized(s,e,t),this._bookKeeper.rangeResized(r,void 0,0)}this._freeHead=null!==r.prev?this._freeHead:r}get fragmentation(){const e=this._size-this._allocated;return 0===e?0:1-this._bookKeeper.largestRange.count/e}static _removeRange(e){null!==e.prev?null!==e.next?(e.prev.next=e.next,e.next.prev=e.prev):e.prev.next=null:null!==e.next&&(e.next.prev=null)}static _fuse(e,t){e.count+=t.count,e.next=t.next,t.from+=t.count,t.count=0,null!==t.next&&(t.next.prev=e)}}const S=["FILL","LINE","MARKER","TEXT","LABEL"];class z{constructor(e,t,s,i){this._strides=e,this._displayList=t,this._freeListsAndStorage={},this._dirtyMap=null,this._dirtyMap=s;for(const t in e){this._freeListsAndStorage[t]={vtxFreeList:i?new R(i):null,idxFreeList:i?new R(i):null,vertexBuffers:{},indexBuffer:i?new Uint32Array(i):null};for(const s in e[t])this._freeListsAndStorage[t].vertexBuffers[s]={data:i?(0,C.C$)(i,e[t][s]):null,stride:e[t][s]}}}static fromTileData(e,t){const s=function(e){const t=e.getStrides(),s={};for(let e=0;e<t.length;e++)s[S[e]]=t[e];return s}(e),i=[0,0,0,0,0],r=[0,0,0,0,0],n=e.tileDisplayData.displayObjects;for(const e of n)for(const t of e.displayRecords)i[t.geometryType]=Math.max(i[t.geometryType],t.vertexFrom+t.vertexCount),r[t.geometryType]=Math.max(r[t.geometryType],t.indexFrom+t.indexCount);const a=new z(s,e.tileDisplayData.displayList,t,null);for(let t=0;t<e.tileBufferData.geometries.length;++t){const s=i[t],n=r[t],o=e.tileBufferData.geometries[t],l=S[t],d=a._storageFor(l),h=e.tileBufferData.geometries[t].indexBuffer;let c;d.indexBuffer=h,d.idxFreeList=new R(h.length),d.idxFreeList.allocate(n);for(const s in o.vertexBuffer){const i=e.tileBufferData.geometries[t].vertexBuffer[s];d.vertexBuffers[s].data=i.data,d.vertexBuffers[s].stride=i.stride;const r=(0,C.Y8)(i.stride),n=i.data.length*r/i.stride;c||(c=n)}d.vtxFreeList=new R(c),d.vtxFreeList.allocate(s)}return a}delete(e){const t=S[e.geometryType];this._freeVertices(t,e.vertexFrom,e.vertexCount),this._freeIndices(t,e.indexFrom,e.indexCount),this._displayList.removeFromList(e),e.vertexFrom=void 0,e.indexFrom=void 0}setMeshData(e,t,s,i,r){const n=S[e.geometryType];let a,o;e.meshData=null,void 0===e.vertexFrom?(o=t.vertexCount,a=this._allocateVertices(n,o)):t.vertexCount>e.vertexCount?(this._freeVertices(n,e.vertexFrom,e.vertexCount),o=t.vertexCount,a=this._allocateVertices(n,o)):t.vertexCount===e.vertexCount?(a=e.vertexFrom,o=e.vertexCount):(this._freeVertices(n,e.vertexFrom+t.vertexCount,e.vertexCount-t.vertexCount),a=e.vertexFrom,o=t.vertexCount);let l,d,h,c=!0;if(void 0===e.indexFrom?(l=r,h=t.indexCount,d=this._allocateIndices(n,h)):t.indexCount>e.indexCount?(l=this._displayList.removeFromList(e),this._freeIndices(n,e.indexFrom,e.indexCount),h=t.indexCount,d=this._allocateIndices(n,h)):t.indexCount===e.indexCount?(c=!1,d=e.indexFrom,h=e.indexCount):(l=this._displayList.removeFromList(e),this._freeIndices(n,e.indexFrom+t.indexCount,e.indexCount-t.indexCount),d=e.indexFrom,h=t.indexCount),-1!==a&&-1!==d){const r=this._storageFor(n);if((0,C.wO)(a,d,r.vertexBuffers,r.indexBuffer,t,s,i),e.vertexFrom=a,e.indexFrom=d,e.vertexCount=t.vertexCount,e.indexCount=t.indexCount,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in s)this._dirtyMap.markDirtyVertices(e.geometryType,t,e.vertexFrom,e.vertexCount)}return c&&this._displayList.addToList(e,l),!0}return-1!==a&&this._freeVertices(n,a,o),-1!==d&&this._freeIndices(n,d,h),e.setMeshDataFromBuffers(t,s,i),e.vertexFrom=void 0,e.vertexCount=0,e.indexFrom=void 0,e.indexCount=0,!1}tryAddMeshData(e,t){const s=t.vertexBuffer,i=t.indexBuffer,r=S[e.geometryType],n=this._allocateVertices(r,e.vertexCount);if(-1===n)return this._freeVertices(r,n,e.vertexCount),!1;const a=this._allocateIndices(r,e.indexCount);if(-1===a)return this._freeVertices(r,n,e.vertexCount),this._freeIndices(r,a,e.indexCount),!1;const o=this._storageFor(r);if((0,C.wO)(n,a,o.vertexBuffers,o.indexBuffer,e,s,i),e.vertexFrom=n,e.indexFrom=a,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in s)this._dirtyMap.markDirtyVertices(e.geometryType,t,n,e.vertexCount)}return this._displayList.addToList(e),!0}_allocateVertices(e,t){const s=this._storageFor(e),i=s.vtxFreeList.allocate(t);return-1===i||s.vtxFreeList.fragmentation>.5?-1:i}_freeVertices(e,t,s){this._storageFor(e).vtxFreeList.free(t,s)}_freeIndices(e,t,s){this._storageFor(e).idxFreeList.free(t,s)}_allocateIndices(e,t){const s=this._storageFor(e),i=s.idxFreeList.allocate(t);return-1===i||s.idxFreeList.fragmentation>.5?-1:i}_storageFor(e){return this._freeListsAndStorage[e]}_stridesFor(e,t){return this._strides[e][t]}}const L=z;s(18193),s(83852);var M=s(75795),A=s(81739);s(49922);var V=s(77773);class U extends V.o{constructor(){super(...arguments),this._data=null,this._displayList=null,this._lastCommitTime=0,this._hasData=!1,this._invalidated=!1,this._wglBuffers=null,this._dirtyMap=new F}destroy(){super.destroy(),this.clear()}get hasData(){return!!this._hasData}get displayObjects(){var e;return null!=(e=this._displayObjects)?e:[]}getGeometry(e){return this._wglBuffers&&this._wglBuffers.has(e)?this._wglBuffers.get(e):null}getDisplayList(){return this._displayList}patch(e){if(!0===e.clear)return this.clear(),void(this._hasData=!1);const t=e.addOrUpdate,s=e.remove;!this._data&&t&&t.tileDisplayData.displayObjects.length?(t.tileDisplayData.computeDisplayList(),this._dirtyMap=new F,this._dispRecStore=L.fromTileData(t,this._dirtyMap),this._data=t,this._dirtyMap.markAllDirty(),this._hasData=!0,e.end&&this.ready()):this._data&&(t&&t.tileDisplayData.displayObjects.length||s.length)?this._doPatchData(e):e.end&&this.ready(),e.end&&!this._data&&this.clear(),this.requestRender(),this.emit("change")}commit(e){e.time&&e.time===this._lastCommitTime||(this._lastCommitTime=e.time,this.visible&&this._data&&(this._wglBuffers||(this._wglBuffers=new class{constructor(e){this.geometryMap=(0,C.Mk)((()=>({indexBuffer:M.Z.createIndex(e,35044),vao:null})),((t,s)=>({vertexBuffer:M.Z.createVertex(e,C.mR[s])})))}dispose(){for(let e=0;e<5;e++){const t=this.geometryMap[e];if(t){t.data.vao&&t.data.vao.dispose(!1),t.data.indexBuffer&&t.data.indexBuffer.dispose();for(const e in t.buffers)t.buffers[e]&&t.buffers[e].data.vertexBuffer.dispose()}}}get(e){const t=this.geometryMap[e];return{draw(e,s,i,r,n){if(!t.data.vao){const r={};for(const e in t.buffers)r[e]=t.buffers[e].data.vertexBuffer;t.data.vao=new A.Z(e,i,s,r,t.data.indexBuffer)}const a=t.data.vao;e.bindVAO(a),e.drawElements(4,n,5125,Uint32Array.BYTES_PER_ELEMENT*r),e.bindVAO(null)}}}has(e){return null!=this.geometryMap[e]}upload(e,t){t.forEach(((t,s)=>{this._upload(t,s,e)}))}_upload(e,t,s){if(e.indices&&(e.indices.allDirty?this._uploadIndices(s,t):null!=e.indices.from&&null!=e.indices.count&&this._uploadIndices(s,t,e.indices.from,e.indices.count)),e.vertices){const i=e.vertices;for(const e in i){const r=i[e];r.allDirty?this._uploadVertices(s,t,e):null!=r.from&&null!=r.count&&this._uploadVertices(s,t,e,r.from,r.count)}}}_uploadVertices(e,t,s,i,r){const n=this.geometryMap[t];if(!n)return;const a=e.geometries[t].vertexBuffer[s];if(!a)return;const o=a.stride,l=a.data.buffer;n.buffers[s]&&l.byteLength>0&&(null!=i&&null!=r?n.buffers[s].data.vertexBuffer.setSubData(l,i*o,i*o,(i+r)*o):n.buffers[s].data.vertexBuffer.setData(l))}_uploadIndices(e,t,s,i){const r=this.geometryMap[t];if(!r)return;const n=e.geometries[t].indexBuffer.buffer;r.data.indexBuffer&&n.byteLength>0&&(null!=s&&null!=i?r.data.indexBuffer.setSubData(n,4*s,4*s,4*(s+i)):r.data.indexBuffer.setData(n))}}(e.context)),(this._dirtyMap.hasDirty()||this._invalidated)&&(this._invalidated=!1,this._wglBuffers.upload(this._data.tileBufferData,this._dirtyMap),this._displayList=this._data.tileDisplayData.displayList.clone(),this._displayObjects=this._data.tileDisplayData.displayObjects.slice(),this._dirtyMap.markAllClean())))}clear(){this._data=null,this._displayList=null,this._dispRecStore=null,this._wglBuffers&&(this._wglBuffers.dispose(),this._wglBuffers=null)}_doPatchData(e){this._invalidated=!0,this._patchData(e)||(this._dirtyMap.markAllDirty(),this._data.reshuffle(),this._dispRecStore=L.fromTileData(this._data,this._dirtyMap)),this.requestRender()}_patchData(e){let t=!0;const s=e.addOrUpdate&&e.addOrUpdate.tileDisplayData&&e.addOrUpdate.tileDisplayData.displayObjects||[],i=(e.remove||[]).slice();for(const e of s)null!=e.insertAfter&&i.push(e.id);for(const e of i){const t=this._data.tileDisplayData.displayObjectRegistry.get(e);if(t){this._data.tileDisplayData.displayList.removeFromList(t.displayRecords);for(const e of t.displayRecords)this._dispRecStore.delete(e);this._data.tileDisplayData.displayObjectRegistry.delete(e);const s=this._data.tileDisplayData.displayObjects.indexOf(t);this._data.tileDisplayData.displayObjects.splice(s,1)}}for(const i of s){let s,r=this._data.tileDisplayData.displayObjectRegistry.get(i.id);if(r){const e=r.displayRecords;r.set(i),r.displayRecords=e;const t=r.displayRecords.length;for(let e=0;e<t;++e){const t=r.displayRecords[e],s=i.displayRecords[e];(e>=i.displayRecords.length||t.geometryType!==s.geometryType||t.symbolLevel!==s.symbolLevel||t.zOrder!==s.zOrder||t.materialKey!==s.materialKey)&&(this._dispRecStore.delete(r.displayRecords[e]),e<i.displayRecords.length&&(r.displayRecords[e]=void 0))}r.displayRecords.length=i.displayRecords.length}else{let e;r=i.copy(),r.displayRecords=[],this._data.tileDisplayData.displayObjectRegistry.set(i.id,r);const t=this._data.tileDisplayData.displayObjects;if(null!=r.insertAfter)if(s={},r.insertAfter>=0){const s=this._data.tileDisplayData.displayObjectRegistry.get(r.insertAfter);s?(e=t.indexOf(s)+1,e<t.length?t.splice(e,0,r):(t.push(r),e=t.length)):(t.push(r),e=t.length)}else t.unshift(r),e=0;else t.push(r),e=t.length;if(s){const r=i.displayRecords.length>0?1:0;let n=0;for(let i=e-1;i>=0&&n<r;--i)for(let e=t[i].displayRecords.length-1;e>=0&&n<r;--e){const r=t[i].displayRecords[e],a=this._data.tileDisplayData.displayList.getDPInfoType();s[a]||(s[a]=r,++n)}}}const n=i.displayRecords.length;for(let a=0;a<n;++a){const n=i.displayRecords[a];let o=r.displayRecords[a];o?(o.meshData=n.meshData,o.materialKey=n.materialKey):(o=n.copy(),o.vertexFrom=void 0,o.indexFrom=void 0,r.displayRecords[a]=o);const l=n.geometryType,d=this._data.tileDisplayData.displayList.getDPInfoType(),h=e.addOrUpdate.tileBufferData.geometries[l],c=h.vertexBuffer,u=h.indexBuffer;let f;s&&(f=s[d]?this._data.tileDisplayData.displayList.splitAfter(s[d]):-1),t=this._dispRecStore.setMeshData(o,n,c,u,f)&&t,s&&null!=o.indexFrom&&null!=o.indexFrom&&(s[d]=o)}}return t}}var O=s(65534);const G=class{constructor(){this._byGeometryType=null}get satisfied(){return!this._byGeometryType}reset(){this._byGeometryType=null}verticesFor(e){return this._byGeometryType?this._byGeometryType[e].vertices:0}indicesFor(e){return this._byGeometryType?this._byGeometryType[e].indices:0}needMore(e,t,s){if(!t&&!s)return;this._byGeometryType||(this._byGeometryType=[{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0}]);const i=this._byGeometryType[e];i.vertices+=t,i.indices+=s}};class P{constructor(){this.geometries=[{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}}]}clone(){const e=new P;for(let t=0;t<this.geometries.length;t++){const s=this.geometries[t],i=e.geometries[t];i.indexBuffer=s.indexBuffer.slice(),i.vertexBuffer={};for(const e in s.vertexBuffer){const{data:t,stride:r}=s.vertexBuffer[e];i.vertexBuffer[e]={data:t.slice(),stride:r}}}return e}static deserialize(e){const t=new P;for(let s=0;s<5;++s){t.geometries[s].indexBuffer=new Uint32Array(e.geometries[s].indexBuffer),t.geometries[s].vertexBuffer={};for(const i in e.geometries[s].vertexBuffer)t.geometries[s].vertexBuffer[i]={data:(0,C.e2)(e.geometries[s].vertexBuffer[i].data,e.geometries[s].vertexBuffer[i].stride),stride:e.geometries[s].vertexBuffer[i].stride}}return t}serialize(){const e={geometries:[{indexBuffer:this.geometries[0].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[1].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[2].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[3].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[4].indexBuffer.buffer,vertexBuffer:{}}]};for(let t=0;t<5;++t)for(const s in this.geometries[t].vertexBuffer)e.geometries[t].vertexBuffer[s]={data:this.geometries[t].vertexBuffer[s].data.buffer,stride:this.geometries[t].vertexBuffer[s].stride};return e}getBuffers(){const e=[];for(let t=0;t<5;++t){e.push(this.geometries[t].indexBuffer.buffer);for(const s in this.geometries[t].vertexBuffer)e.push(this.geometries[t].vertexBuffer[s].data.buffer)}return e}}const k=P,j=class{constructor(){this.vertexData=new Map,this.vertexCount=0,this.indexData=[]}clear(){this.vertexData.clear(),this.vertexCount=0,this.indexData=[]}update(e,t,s){for(const t in e)this.vertexData.set(t,e[t]);for(const t in this.vertexData)null===e[t]&&this.vertexData.delete(t);this.vertexCount=t,this.indexData=s}};class Z{constructor(e,t,s,i=0,r=0){this.id=e,this.geometryType=t,this.materialKey=s,this.minZoom=i,this.maxZoom=r,this.meshData=null,this.symbolLevel=0,this.zOrder=0,this.vertexFrom=0,this.vertexCount=0,this.indexFrom=0,this.indexCount=0}get sortKey(){return void 0===this._sortKey&&this._computeSortKey(),this._sortKey}clone(){return this.copy()}copy(){const e=new Z(this.id,this.geometryType,this.materialKey);return e.vertexFrom=this.vertexFrom,e.vertexCount=this.vertexCount,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e.zOrder=this.zOrder,e.symbolLevel=this.symbolLevel,e.meshData=this.meshData,e.minZoom=this.minZoom,e.maxZoom=this.maxZoom,e}setMeshDataFromBuffers(e,t,s){const i=new j;for(const s in t){const r=t[s].stride,n=t[s].data,a=[],o=(0,C.Y8)(r);for(let t=0;t<r*e.vertexCount/o;++t)a[t]=n[t+r*e.vertexFrom/o];i.vertexData.set(s,a)}i.indexData.length=0;for(let t=0;t<e.indexCount;++t)i.indexData[t]=s[t+e.indexFrom]-e.vertexFrom;i.vertexCount=e.vertexCount,this.meshData=i}readMeshDataFromBuffers(e,t){this.meshData?this.meshData.clear():this.meshData=new j;for(const t in e){const s=e[t].stride,i=e[t].data,r=[],n=(0,C.Y8)(s);for(let e=0;e<s*this.vertexCount/n;++e)r[e]=i[e+s*this.vertexFrom/n];this.meshData.vertexData.set(t,r)}this.meshData.indexData.length=0;for(let e=0;e<this.indexCount;++e)this.meshData.indexData[e]=t[e+this.indexFrom]-this.vertexFrom;this.meshData.vertexCount=this.vertexCount}writeMeshDataToBuffers(e,t,s,i){for(const s in t){const i=t[s].stride,r=this.meshData.vertexData.get(s),n=t[s].data,a=(0,C.Y8)(i);for(let t=0;t<i*this.meshData.vertexCount/a;++t)n[t+i*e/a]=r[t]}for(let t=0;t<this.meshData.indexData.length;++t)i[t+s]=this.meshData.indexData[t]+e;this.vertexFrom=e,this.vertexCount=this.meshData.vertexCount,this.indexFrom=s,this.indexCount=this.meshData.indexData.length}static writeAllMeshDataToBuffers(e,t,s){let i=0,r=0;for(const n of e)n.writeMeshDataToBuffers(i,t,r,s),i+=n.vertexCount,r+=n.indexCount}_computeSortKey(){this._sortKey=(31&this.symbolLevel)<<12|(127&this.zOrder)<<4|7&this.geometryType}serialize(e){return e.push(this.geometryType),e.push(this.materialKey),e.push(this.vertexFrom),e.push(this.vertexCount),e.push(this.indexFrom),e.push(this.indexCount),e.push(this.minZoom),e.push(this.maxZoom),e}static deserialize(e,t){const s=e.readInt32(),i=e.readInt32(),r=new Z(t.id,s,i);return r.vertexFrom=e.readInt32(),r.vertexCount=e.readInt32(),r.indexFrom=e.readInt32(),r.indexCount=e.readInt32(),r.minZoom=e.readInt32(),r.maxZoom=e.readInt32(),r}}const E=Z;function K(e,t){if(null!==t){e.push(t.length);for(const s of t)s.serialize(e);return e}e.push(0)}class W{constructor(e){this.insertAfter=null,this.id=e,this.displayRecords=[]}copy(){const e=new W(this.id);return e.set(this),e}clone(){const e=new W(this.id);return e.displayRecords=this.displayRecords.map((e=>e.clone())),e.insertAfter=this.insertAfter,e}set(e){this.id=e.id,this.displayRecords=e.displayRecords,this.insertAfter=e.insertAfter}serialize(e){return e.push(this.id),K(e,this.displayRecords),e}static deserialize(e){const t=e.readInt32(),s=new W(t),i={id:t};return s.displayRecords=function(e,t,s){const i=e.readInt32(),r=new Array(i);for(let i=0;i<r.length;i++)r[i]=t.deserialize(e,s);return r}(e,E,i),s}}const q=W;var H=s(9963);function N(e,t,s,...i){t<e.length?e.splice(t,s,...i):e.push(...i)}const X=new Map;X.set(H.jx.MAP,[H.LW.FILL,H.LW.LINE,H.LW.MARKER,H.LW.TEXT]),X.set(H.jx.LABEL,[H.LW.LABEL]),X.set(H.jx.LABEL_ALPHA,[H.LW.LABEL]);class Y{constructor(){this.symbolLevels=[]}replay(e,t,s){for(const i of this.symbolLevels)for(const r of i.zLevels){const i=r.geometryDPInfo.unified;if(i)for(const r of i){const i=e.painter.getGeometryBrush(r.geometryType),n=t.getGeometry(r.geometryType),a={geometryType:r.geometryType,materialKey:r.materialKey,indexFrom:r.indexFrom,indexCount:r.indexCount,draw:(e,t,s)=>{n.draw(e,t,s,r.indexFrom,r.indexCount)}};i.prepareState(e,t),i.drawGeometry(e,t,a,s)}}}get empty(){return!this.symbolLevels||0===this.symbolLevels.length}clear(){this.symbolLevels.length=0}addToList(e,t){if(Array.isArray(e))for(const s of e)this._addToList(s,t);else this._addToList(e,t)}removeFromList(e){Array.isArray(e)||(e=[e]);let t=null;for(const s of e)t=this._removeFromList(s);return t}clone(){const e=new Y;for(const t of this.symbolLevels)e.symbolLevels.push(t.clone());return e}splitAfter(e){const t=this._getDisplayList(e.symbolLevel,e.zOrder),s=t.length,i=e.indexFrom+e.indexCount;for(let r=0;r<s;++r){const s=t[r];if(s.geometryType===e.geometryType&&i>s.indexFrom&&i<=s.indexFrom+s.indexCount){if(i<s.indexFrom+s.indexCount){const e=new J;e.geometryType=s.geometryType,e.materialKey=s.materialKey,e.indexFrom=i,e.indexCount=s.indexFrom+s.indexCount-i,t.splice(r+1,0,e),s.indexCount=i-s.indexFrom}return r}}}_addToList(e,t){const s=e.symbolLevel,i=e.zOrder,r=this._getDisplayList(s,i),n=null!=t?t:r.length-1,a=n>=0&&n<r.length?r[n]:null;if(null!==a&&a.materialKey===e.materialKey&&a.indexFrom+a.indexCount===e.indexFrom&&a.geometryType===e.geometryType)a.indexCount+=e.indexCount;else{const t=new J;t.indexFrom=e.indexFrom,t.indexCount=e.indexCount,t.materialKey=e.materialKey,t.geometryType=e.geometryType,N(r,n+1,0,t)}}_removeFromList(e){const t=e.symbolLevel,s=e.zOrder,i=this._getDisplayList(t,s),r=i.length;let n;for(let t=0;t<r;++t){const s=i[t];if(e.indexFrom+e.indexCount>s.indexFrom&&e.indexFrom<s.indexFrom+s.indexCount&&s.geometryType===e.geometryType){n=t;break}}if(void 0!==n){const t=i[n];if(e.indexFrom===t.indexFrom)return t.indexCount-=e.indexCount,t.indexFrom+=e.indexCount,0===t.indexCount&&N(i,n,1),n-1;if(e.indexFrom+e.indexCount===t.indexFrom+t.indexCount)return t.indexCount-=e.indexCount,0===t.indexCount?(N(i,n,1),n-1):n;{const s=t.indexFrom,r=e.indexFrom-t.indexFrom,a=e.indexCount,o=t.indexFrom+t.indexCount-(e.indexFrom+e.indexCount);t.indexCount=r;const l=new J;return l.geometryType=t.geometryType,l.materialKey=t.materialKey,l.indexFrom=s+r+a,l.indexCount=o,N(i,n+1,0,l),n}}return null}_getDisplayList(e,t){let s;const i=this.symbolLevels.length;for(let t=0;t<i;t++)if(this.symbolLevels[t].symbolLevel===e){s=this.symbolLevels[t];break}let r;s||(s=new ee,s.symbolLevel=e,this.symbolLevels.push(s));const n=s.zLevels.length;for(let e=0;e<n;e++)if(s.zLevels[e].zLevel===t){r=s.zLevels[e];break}return r||(r=new $,r.geometryDPInfo=new Q,r.zLevel=t,s.zLevels.push(r)),r.geometryDPInfo.unified||(r.geometryDPInfo.unified=[]),r.geometryDPInfo.unified}getDPInfoType(){return"unified"}}class J{constructor(){this.materialKey=null,this.indexFrom=0,this.indexCount=0}clone(){const e=new J;return e.geometryType=this.geometryType,e.materialKey=this.materialKey,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e}}class Q{constructor(){this.fill=null,this.line=null,this.marker=null,this.text=null,this.label=null,this.unified=null}clone(){const e=new Q;return e.fill=this.fill&&this.fill.map((e=>e.clone())),e.line=this.line&&this.line.map((e=>e.clone())),e.marker=this.marker&&this.marker.map((e=>e.clone())),e.text=this.text&&this.text.map((e=>e.clone())),e.label=this.label&&this.label.map((e=>e.clone())),e.unified=this.unified&&this.unified.map((e=>e.clone())),e}}class ${constructor(){this.geometryDPInfo=new Q}clone(){const e=new $;return e.zLevel=this.zLevel,e.geometryDPInfo=this.geometryDPInfo.clone(),e}}class ee{constructor(){this.zLevels=[]}clone(){const e=new ee;e.symbolLevel=this.symbolLevel;for(const t of this.zLevels)e.zLevels.push(t.clone());return e}}const te=Y;class se{constructor(){}get displayObjectRegistry(){if(!this._displayObjectRegistry){this._displayObjectRegistry=new Map;for(const e of this.displayObjects)this._displayObjectRegistry.set(e.id,e)}return this._displayObjectRegistry}get displayList(){return this._displayList}computeDisplayList(){this._displayList=new te;for(const e of this.displayObjects)for(const t of e.displayRecords)this._displayList.addToList(t)}clone(){const e=new se;return this.displayObjects&&(e.displayObjects=this.displayObjects.map((e=>e.clone()))),e}serialize(e){return K(e,this.displayObjects),e}_deserializeObjects(e){const t=e.readInt32(),s=new Array(t),i=new Map;for(let t=0;t<s.length;++t){const r=q.deserialize(e);s[t]=r,i.set(r.id,r)}this.displayObjects=s,this._displayList=null,this._displayObjectRegistry=i}static deserialize(e){const t=new se;return t._deserializeObjects(e),t}}const ie=se;class re{constructor(e,t){this.data=e,this.stride=t}static decode(e){const t=(0,C.e2)(e.data,e.stride),s=e.stride;return new re(t,s)}static fromVertexVector(e){const t=(0,C.e2)(e.data.buffer(),e.stride),s=e.stride;return new re(t,s)}}class ne{constructor(e,t,s){this.geometryType=e,this.indexBuffer=new Uint32Array(t),this.namedBuffers=s}static decode(e){const t=e.geometryType,s=e.indexBuffer,i={};for(const t in e.namedBuffers)i[t]=re.decode(e.namedBuffers[t]);return new ne(t,s,i)}static fromVertexData(e,t){const s=e.indices,i=(0,C.e2)(e.vertices,e.stride),r=e.stride,n={geometry:new re(i,r)};return new ne(t,s,n)}static fromVertexVectors(e){const t=e.geometryType,s=e.indexVector.buffer(),i={};for(const t in e.namedVectors)i[t]=re.fromVertexVector(e.namedVectors[t]);return new ne(t,s,i)}}var ae=s(36303);class oe{constructor(e,t){this.data=e,this.stride=t}get vertexCount(){const e=this.stride/4,t=this.data.length/e;return t!==(0|t)&&console.debug("Corrupted stride"),t}transfer(e,t){const s=this.data.buffer();e.vertexCount=this.vertexCount,e.data=s,e.stride=this.stride,t.push(s)}}class le{constructor(e,t,s=!1){this.geometryType=e,this.indexVector=new ae.Z(Uint32Array,6*t),this.namedVectors={};const i=(0,C.$_)(e,s);for(const e in i){const s=i[e];let r;switch(s%4){case 0:case 2:r=new ae.Z(Uint32Array,s*t);break;case 1:case 3:r=new ae.Z(Uint8Array,s*t)}this.namedVectors[e]=new oe(r,s)}}get(e){return this.namedVectors[e].data}getVector(e){return this.namedVectors[e]}transfer(e,t){const s=this.indexVector.buffer(),i={};t.push(s);for(const e in this.namedVectors){const s=this.namedVectors[e];i[e]={},s.transfer(i[e],t)}e.geometryType=this.geometryType,e.indexBuffer=s,e.namedBuffers=i,this.destroy()}intoBuffers(){const e=ne.fromVertexVectors(this);return this.destroy(),e}destroy(){this.indexVector=null,this.namedVectors=null}}const de=new G,he=new G;function ce(e,t){const s={};for(const i in e){const r={data:(0,C.C$)(t,e[i]),stride:e[i]};s[i]=r}return s}class ue{constructor(){this.tileDisplayData=null,this.tileBufferData=null}reshuffle(){de.reset();const e=function(e){const t=[[],[],[],[],[]],s=e;for(const e of s)for(const s of e.displayRecords)t[s.geometryType].push(s);return t}(this.tileDisplayData.displayObjects);for(const t of e)for(const e of t)e&&de.needMore(e.geometryType,e.meshData?e.meshData.vertexCount:e.vertexCount,e.meshData?e.meshData.indexData.length:e.indexCount);const t=e.length,s=new k;for(let e=0;e<t;++e){s.geometries[e].indexBuffer=new Uint32Array(Math.round(1.5*de.indicesFor(e)));const t=[];for(const s in this.tileBufferData.geometries[e].vertexBuffer)t.push(this.tileBufferData.geometries[e].vertexBuffer[s].stride);const i=ue._computeVertexAlignment(t),r=Math.round(1.5*de.verticesFor(e)),n=ue._align(r,i);for(const t in this.tileBufferData.geometries[e].vertexBuffer){const i=this.tileBufferData.geometries[e].vertexBuffer[t].stride;s.geometries[e].vertexBuffer[t]={stride:i,data:(0,C.C$)(n,i)}}}he.reset(),this.tileDisplayData.displayList.clear();for(let i=0;i<t;++i){const t=e[i];for(const e of t){if(e.meshData)e.writeMeshDataToBuffers(he.verticesFor(i),s.geometries[i].vertexBuffer,he.indicesFor(i),s.geometries[i].indexBuffer),e.meshData=null;else{const t=this.tileBufferData.geometries[i].vertexBuffer,r=this.tileBufferData.geometries[i].indexBuffer,n=s.geometries[i].vertexBuffer,a=s.geometries[i].indexBuffer,o=he.verticesFor(i),l=he.indicesFor(i);(0,C.wO)(o,l,n,a,e,t,r),e.vertexFrom=o,e.indexFrom=l}he.needMore(i,e.vertexCount,e.indexCount)}}for(const e of this.tileDisplayData.displayObjects)this.tileDisplayData.displayList.addToList(e.displayRecords);this.tileBufferData=s}getStrides(){const e=[];for(let t=0;t<this.tileBufferData.geometries.length;++t){const s=this.tileBufferData.geometries[t];e[t]={};for(const i in s.vertexBuffer)e[t][i]=s.vertexBuffer[i].stride}return e}clone(){const e=new ue;return e.tileBufferData=this.tileBufferData.clone(),e.tileDisplayData=this.tileDisplayData.clone(),e}_guessSize(){const{displayObjects:e}=this.tileDisplayData,t=Math.min(e.length,4);let s=0;for(let i=0;i<t;i++)s=Math.max(s,e[i].displayRecords.length);return 2*(12*e.length+e.length*s*40)}serialize(){const e=this.tileBufferData.serialize(),t=this.tileBufferData.getBuffers(),s=this.tileDisplayData.serialize(new ae.Z(Int32Array,this._guessSize())).buffer();return t.push(s),{result:{displayData:s,bufferData:e},transferList:t}}static fromVertexData(e){const t=[],s={},i=new Map;return(0,C.Z_)((r=>{const a=e.data[r];if((0,n.pC)(a)){const e=O.$.from(a.records).getCursor();for(;e.next();){const s=e.id,n=e.materialKey,a=e.insertAfter,o=e.indexFrom,l=e.indexCount,d=e.vertexFrom,h=e.vertexCount;if(!i.has(s)){const e=new q(s);e.insertAfter=a,i.set(s,e),t.push(e)}const c=i.get(s),u=new E(s,r,n);u.indexFrom=o,u.indexCount=l,u.vertexFrom=d,u.vertexCount=h,c.displayRecords.push(u)}s[r]=ne.fromVertexData(a,r)}else s[r]=new le(r,0).intoBuffers()})),t.sort(((e,t)=>e.id-t.id)),ue.fromMeshData({displayObjects:t,vertexBuffersMap:s})}static fromMeshData(e){const t=new ue,s=new ie,i=new k;s.displayObjects=e.displayObjects;for(const t in e.vertexBuffersMap){const s=e.vertexBuffersMap[t];i.geometries[t].indexBuffer=s.indexBuffer,i.geometries[t].vertexBuffer=s.namedBuffers}return t.tileDisplayData=s,t.tileBufferData=i,t}static bind(e,t){const s=new ue;return s.tileDisplayData=e,s.tileBufferData=t,s}static create(e,t){const s=new ue;s.tileDisplayData=new ie,s.tileDisplayData.displayObjects=e;const i=[0,0,0,0,0],r=[0,0,0,0,0],n=[[],[],[],[],[]];for(const t of e)for(const e of t.displayRecords)n[e.geometryType].push(e),i[e.geometryType]+=e.meshData.vertexCount,r[e.geometryType]+=e.meshData.indexData.length;const a=new k,o=function(e){return[e.fill||{},e.line||{},e.icon||{},e.text||{},e.label||{}]}(t);for(let e=0;e<5;e++){const t=new Uint32Array(r[e]),s=ce(o[e],i[e]);E.writeAllMeshDataToBuffers(n[e],s,t),a.geometries[e]={indexBuffer:t,vertexBuffer:s}}return s.tileBufferData=a,s}static _align(e,t){const s=e%t;return 0===s?e:e+(t-s)}static _computeVertexAlignment(e){let t=!1,s=!1;for(const i of e)i%4==2?t=!0:i%4!=0&&(s=!0);return s?4:t?2:1}}var fe=s(74200),pe=s(98103),me=s(42873),ye=s(79059),ge=s(40966),_e=s(96642),xe=s(97486),ve=s(19380),be=s(43169),we=s(78614),De=s(51904);class Te extends De.i{constructor(e,t){super(e,t,null)}static from(e){const t=we.s.createInstance(),s=[],i=e.filter((e=>!!e.geometry));for(const e of i){const t=(0,p.Ji)(e.geometry);(0,be.E7)(s,[e],t,!1,!1,"uid")}return new Te(t,s)}get geometryType(){const e=this._current;return e?e.geometryType:null}get insertAfter(){return this._current.insertAfter}readGraphic(){return this._current}getCursor(){return this.copy()}copy(){const e=new Te(this.instance,this._features);return this.copyInto(e),e}}var Ce=s(50038),Be=s(47664),Fe=s(71808),Ie=s(66281),Re=s(89751),Se=s(42176),ze=s(63398),Le=s(13394),Me=s(79197),Ae=s(60395);const Ve=new Me.Z,Ue=new Me.Z,Oe="esriGeometryPolyline";function Ge(e){e.coords.length=0,e.lengths.length=0}class Pe{constructor(){this.bounds=(0,y.Ue)(),this.graphic=null,this.size=[0,0,0,0]}static acquire(e=null,t,s,i,r,n){let a;return 0===Pe._pool.length?a=new Pe:(a=Pe._pool.pop(),this._set.delete(a)),a.acquire(e,t,s,i,r,n),a}static release(e){e&&!this._set.has(e)&&(e.release(),this._pool.push(e),this._set.add(e))}static getCentroidQuantized(e,t){if((0,p.oU)(e.geometry)){const s=e.symbol;if((0,n.Wi)(s))return null;if((0,me.yA)(s.type)||(0,me.ab)(s.type)){const s=(0,Le.tO)(e.geometry);return(0,Ae.RF)(t,{},{x:s[0],y:s[1]},!1,!1)}}return null}acquire(e=null,t,s,i,r,n){e&&this.set(e,t,s,i,r,n)}release(){this.graphic=null,this.symbolResource=null,this.geometry=null}get symbol(){return this.symbolResource.symbol}set(e,t,s,i,r,n){this.graphic=e,this.geometry=s,this.symbolResource=t,this.updateBounds(i,r,n)}updateBounds(e,t,s){(0,me.zX)(this.bounds,this.size,this.symbolResource,this.geometry,e,t,s)}getGeometryQuantized(e){if((0,p.oU)(this.geometry)){const t=this.geometry.rings;if(1===t.length&&2===t[0].length)return(0,Ae.ym)(e,{paths:[[t[0][0],t[0][1]]]})}else if((0,p.l9)(this.geometry))return Ge(Ve),Ge(Ue),(0,be.u0)(Ve,this.geometry),(0,be.zj)(Ue,Ve,this.geometry.hasZ,this.geometry.hasM,Oe,e.scale[0]),(0,be.Nh)(Ve,Ue,this.geometry.hasZ,this.geometry.hasM,Oe,e),(0,be.J6)(Ve,this.geometry.hasZ,this.geometry.hasM);return(0,Ae.ym)(e,this.geometry)}}Pe._pool=[],Pe._set=new Set;const ke=Pe,je={minX:0,minY:0,maxX:0,maxY:0},Ze=(0,y.Ue)(),Ee=[],Ke=1e-5;function We(e,t,s,i,r){return je.minX=t,je.minY=s,je.maxX=i,je.maxY=r,e.search(je)}var qe=s(50575);const He=e=>{let t=class extends((0,qe.I)(e)){constructor(){super(...arguments),this.graphics=null,this.renderer=null,this.view=null}};return(0,i._)([(0,a.Cb)()],t.prototype,"graphics",void 0),(0,i._)([(0,a.Cb)()],t.prototype,"renderer",void 0),(0,i._)([(0,a.Cb)()],t.prototype,"updating",void 0),(0,i._)([(0,a.Cb)()],t.prototype,"view",void 0),t=(0,i._)([(0,o.j)("esri.views.layers.GraphicsView")],t),t};function Ne(e,t,s){if(s.has(e))return s.get(e);const i={tile:t,addedOrModified:[],removed:[]};return s.set(e,i),i}let Xe=class extends(He((0,_.p)(d.Z))){constructor(e){super(e),this._storage=new ve.O,this._displayIds=new Map,this._tiles=new Map,this._graphicStoreUpdate=!1,this._graphicsSet=new Set,this._matcher=Promise.resolve(null),this._tileUpdateSet=new Set,this._tilesToUpdate=new Map,this._graphicIdToAbortController=new Map,this._attached=!1,this._highlightIds=new Map,this._updatingGraphicsTimer=null,this._hashToExpandedSymbol=new Map,this._hashTpExpandedSymbolPromise=new Map,this._processing=!1,this._needsProcessing=!1,this._pendingUpdate={added:new Set,updated:new Set,removed:new Set},this.lastUpdateId=-1,this.updateRequested=!1,this.graphicUpdateHandler=this.graphicUpdateHandler.bind(this)}_createMatcher(e,t){if(e){const s=(0,ye.MD)({indexCount:0,fields:{}},"feature",e);this._matcher=(0,ge.f)(s,t,null)}}_createDisplayId(e){return this._displayIds.has(e)||this._displayIds.set(e,this._storage.createDisplayId()),this._displayIds.get(e)}initialize(){this._tileStore=new Ce.Z(this.view.featuresTilingScheme),this._attributeStore=new fe.ZP({type:"local",initialize:e=>Promise.resolve(this.container.attributeView.initialize(e)),update:e=>this.container.attributeView.requestUpdate(e),render:()=>this.container.requestRender()},(0,v.Z)()),this._graphicStore=new class{constructor(e,t,s,i,n,a){this._graphics=i,this._onAdd=n,this._onRemove=a,this._index=(0,ze.r)(9,(0,r.Z)("csp-restrictions")?e=>({minX:e.bounds[0],minY:e.bounds[1],maxX:e.bounds[2],maxY:e.bounds[3]}):[".bounds[0]",".bounds[1]",".bounds[2]",".bounds[3]"]),this._itemByGraphic=new Map,this._currentLevel=-1/0,this._tileInfoView=e,this._uidFieldName=s;const o=e.getClosestInfoForScale(t);o&&(this._currentLevel=o.level,this._resolution=this._tileInfoView.getTileResolution(o.level));const l=e.spatialReference;this._metersPerUnit=(0,h.JY)(l)?(0,Ie.Z7)(e.spatialReference):1}hitTest(e,t,s,i,r){e=(0,Se.or)(e,this._tileInfoView.spatialReference);const n=.5*i*s;Ze[0]=e-n,Ze[1]=t-n,Ze[2]=e+n,Ze[3]=t+n;const a=.5*i*(s+me.y1),o=We(this._index,e-a,t-a,e+a,t+a);if(!o||0===o.length)return[];const l={x:e,y:t},d=[];let h;for(const s of o)if(s.graphic.visible)switch((0,p.Ji)(s.geometry)){case"esriGeometryPoint":{const e=s.symbol;if(!e)continue;const t=s.geometry,{x:n,y:a}=t,o=i*this._metersPerUnit;let h;switch(e.type){case"esriTS":h=(0,me.Zw)(n,a,e,s.size,i,r);break;case"expanded-cim":h=(0,me.oD)(n,a,e,i,o,r);break;case"esriSMS":case"esriPMS":h=(0,me.Il)(n,a,e,i,o,r)}(0,Be.CI)(h,l)&&d.push(s)}break;case"esriGeometryPolyline":{const r=s.symbol;if(!r||!r.layers.length)continue;const n=r.layers[0];h=1.5*i*window.devicePixelRatio*(0,m.F2)(n.width),(0,me.nl)(s.geometry,e,t,h)&&d.push(s)}break;case"esriGeometryEnvelope":{const e=s.geometry,t=(0,y.al)(e.xmin,e.ymin,e.xmax,e.ymax);(0,y.kK)(t,Ze)&&d.push(s);break}case"esriGeometryPolygon":{if((0,Be.CI)(s.geometry,l)){d.push(s);break}const e=(0,Fe._w)(s.geometry);if(Math.abs(e.ymax-e.ymin)<5*i||Math.abs(e.xmax-e.xmin)<5*i){const t=(0,y.al)(e.xmin,e.ymin,e.xmax,e.ymax);(0,y.kK)(t,Ze)&&d.push(s)}break}case"esriGeometryMultipoint":{const e=s.symbol;if(!e)continue;const t=s.geometry.points;let n;for(let a=0;a<t.length;a++)if(n="esriTS"===e.type?(0,me.Zw)(t[a][0],t[a][1],e,s.size,i,r):(0,me.Il)(t[a][0],t[a][1],e,i,i*this._metersPerUnit,r),(0,Be.CI)(n,l)){d.push(s);break}break}}return d.sort(((e,t)=>{const s=(0,me.eT)(e.graphic),i=(0,me.eT)(t.graphic);return s===i?t.zorder-e.zorder:s-i})),d.map((e=>e.graphic))}getGraphicsData(e,t,s){const i=this._searchForItems(t);if(0===i.length||0===s.length)return[];i.sort(((e,t)=>e.zorder-t.zorder)),i[0].insertAfter=-1;for(let e=1;e<i.length;e++)i[e].insertAfter=i[e-1].graphic.uid;i.sort(((e,t)=>e.graphic.uid-t.graphic.uid)),s.sort(((e,t)=>e.uid-t.uid));let r,n=0,a=0;const o=[],l={originPosition:"upperLeft",scale:[t.resolution,t.resolution],translate:[t.bounds[0],t.bounds[3]]};for(const t of s){for(a=-2;n<i.length;)if(r=i[n],n++,t.uid===r.graphic.uid){a=r.insertAfter;break}if(!r.geometry||-2===a)continue;const s=r.getGeometryQuantized(l),d={...r.graphic.attributes};d[this._uidFieldName]=t.uid,null==r.groupId&&(r.groupId=e.createTemplateGroup(r.symbol,null)),o.push({centroid:ke.getCentroidQuantized(r,l),geometry:s,attributes:d,symbol:r.symbol,groupId:r.groupId,insertAfter:a,zorder:r.zorder})}return o.sort(((e,t)=>e.zorder-t.zorder)),o}queryTileData(e,t){const{bounds:s,resolution:i}=t,r=this._searchForItems(t),n=[];return this._createTileGraphics(n,e,r,{originPosition:"upperLeft",scale:[i,i],translate:[s[0],s[3]]}),n}has(e){return this._itemByGraphic.has(e)}getBounds(e){return this._itemByGraphic.has(e)?this._itemByGraphic.get(e).bounds:null}addOrModify(e,t,s){if(!e)return;this.has(e)&&this.remove(e),this._onAdd(e);const i=ke.acquire(e,t,s,this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference);return this._itemByGraphic.set(e,i),s&&this._index.insert(i),i.bounds}remove(e){if(!this._itemByGraphic.has(e))return;this._onRemove(e);const t=this._itemByGraphic.get(e);this._index.remove(t),this._itemByGraphic.delete(e)}updateZ(){const e=this._graphics.items;let t,s;for(let i=0;i<e.length;i++)s=e[i],t=this._itemByGraphic.get(s),t&&(t.zorder=i)}update(e,t,s){const i=this._itemByGraphic.get(e);i.groupId=null;const r=(0,y.d9)(i.bounds);return i.size[0]=i.size[1]=0,this._index.remove(i),i.set(e,t,s,this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference),s&&this._index.insert(i),{oldBounds:r,newBounds:i.bounds}}updateLevel(e){if(this._currentLevel===e)return;this._currentLevel=e;const t=this._tileInfoView.getTileResolution(e);this._resolution=t,this._index.clear(),Ee.length=0,this._itemByGraphic.forEach((e=>{e.updateBounds(this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference),e.geometry&&Ee.push(e)})),this._index.load(Ee)}clear(){this._itemByGraphic.clear(),this._index.clear()}_createTileGraphics(e,t,s,i){const r=this._uidFieldName;let n,a,o,l;s.sort(((e,t)=>e.zorder-t.zorder));for(let d=0;d<s.length;d++){o=s[d],n=o.graphic,a=o.getGeometryQuantized(i),l=0===d?-1:s[d-1].graphic.uid;const h={...o.graphic.attributes};h[r]=n.uid,null==o.groupId&&(o.groupId=t.createTemplateGroup(o.symbol,null)),e.push({centroid:ke.getCentroidQuantized(o,i),geometry:a,attributes:h,symbol:o.symbol,groupId:o.groupId,insertAfter:l,zorder:o.zorder})}}_searchForItems(e){const t=this._tileInfoView.spatialReference,s=e.bounds;if(t.isWrappable){const[i,r]=(0,Re.uS)(t),n=Math.abs(s[2]-r)<Ke,a=Math.abs(s[0]-i)<Ke;if((!n||!a)&&(n||a)){const t=e.resolution;let a;a=(0,y.Ue)(n?[i,s[1],i+t*me.y1,s[3]]:[r-t*me.y1,s[1],r,s[3]]);const o=We(this._index,s[0],s[1],s[2],s[3]),l=We(this._index,a[0],a[1],a[2],a[3]);return[...new Set([...o,...l])]}}return We(this._index,s[0],s[1],s[2],s[3])}}(this.view.featuresTilingScheme,this.view.state.scale,this.uid,this.graphics,(e=>{this._createDisplayId(e.uid),this._setFilterState(e.uid,e.visible)}),(e=>{const t=this._displayIds.get(e.uid);this._displayIds.delete(e.uid),this._storage.releaseDisplayId(t)}));const e=new _e.W(this.container.getMaterialItems.bind(this.container),!0);this._createMatcher(this.renderer,e),this._meshFactory=new xe.j(null,this.uid,e),this._templateStore=e,this.watch("renderer",(t=>{this._createMatcher(t,e);for(const e of this.graphics)this._pendingUpdate.updated.add(e);this.requestUpdate()})),this._tileStore.on("update",this._onTileUpdate.bind(this)),this.container.on("attach",(()=>{this.graphics.items.length>0&&this._graphicsChangeHandler({target:this.graphics,added:this.graphics.items,removed:[],moved:[]}),this.handles.add(this.graphics.on("change",(e=>this._graphicsChangeHandler(e))),"graphics"),this._attached=!0,this.notifyChange("updating")}))}destroy(){this._updatingGraphicsTimer&&(clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=null,this.notifyChange("updating")),this.container.destroy(),this._set("graphics",null),this._graphicStore.clear(),this._tileStore.destroy(),this._attributeStore=null,this._hashToExpandedSymbol.clear(),this.view=null,this.renderer=null}get updating(){return!this._attached||null!==this._updatingGraphicsTimer||this._tileUpdateSet.size>0||this._tilesToUpdate.size>0}hitTest(e,t){if(!this.view||!this.view.position)return Promise.resolve(null);const s=this.view.toMap((0,m.vW)(e,t));return this.searchFeatures(s).then((e=>e&&e.length?e[0]:null))}async searchFeatures(e,t=2){return this._graphicStore.hitTest(e.x,e.y,t,this.view.state.resolution,this.view.state.rotation)}update(e){const t=e.state,s=this.view.featuresTilingScheme.getClosestInfoForScale(t.scale).level;if(this._graphicStore.updateLevel(s),this._tileStore.setViewState(t),this._graphicStoreUpdate=!0,this.updateRequested=!1,this._pendingUpdate.updated.size>0){if(!this._processing)return void this._updateGraphics();this._needsProcessing=!0}}viewChange(){this.requestUpdate()}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback())}processUpdate(e){this.updateRequested&&(this.updateRequested=!1,this.update(e))}graphicUpdateHandler(e){const{graphic:t,property:s,newValue:i}=e;switch(s){case"attributes":break;case"geometry":case"symbol":this._pendingUpdate.updated.add(t),this.requestUpdate();break;case"visible":this._setFilterState(t.uid,i),this._attributeStore.sendUpdates()}}addHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t);this._highlightIds.set(t,e+1)}else this._highlightIds.set(t,1);this._updateHighlight()}removeHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t)-1;0===e?this._highlightIds.delete(t):this._highlightIds.set(t,e)}this._updateHighlight()}_updateHighlight(){const e=Array.from(this._highlightIds.keys()),t=e.map((e=>this._displayIds.get(e)));this._attributeStore.setHighlight(e,t)}_getIntersectingTiles(e){const t=this._graphicStore.getBounds(e);if(!t||0===(0,y.bf)(t)||0===(0,y.Cb)(t))return[];const s=(0,me.Zu)(t,this.view.spatialReference);return(0,n.pC)(s)?[...this._tileStore.boundsIntersections(s[0]),...this._tileStore.boundsIntersections(s[1])]:this._tileStore.boundsIntersections(t)}async _updateTile(e){const t=e.tile,s=this._getGraphicsData(this._templateStore,t,e.addedOrModified),i=await this._processGraphics(t,s);return this._patchTile(t.key,{type:"update",addOrUpdate:i,remove:e.removed,end:!0,clear:!1}),i}_patchTile(e,t){if(!this._tiles.has(e))return;const s=this._tiles.get(e);this.container.onTileData(s,t),this.container.requestRender()}_graphicsChangeHandler(e){for(const t of e.added)this._pendingUpdate.added.add(t);for(const t of e.moved)this._pendingUpdate.added.add(t);for(const t of e.removed)this._pendingUpdate.added.has(t)?this._pendingUpdate.added.delete(t):this._pendingUpdate.removed.add(t);this._processing?this._needsProcessing=!0:this._updateGraphics()}_getGraphicsToUpdate(){const e={added:[],removed:[],updated:[]};if(!this.graphics)return e;const t=this._pendingUpdate;for(const s of this.graphics.items)t.added.has(s)?e.added.push(s):t.updated.has(s)&&e.updated.push(s);for(const s of t.removed)this._graphicStore.has(s)&&e.removed.push(s);return t.added.clear(),t.removed.clear(),t.updated.clear(),e}async _updateGraphics(){this._processing=!0;const{added:e,removed:t,updated:s}=this._getGraphicsToUpdate(),i=this._tilesToUpdate;let r;try{if(!this._graphicStoreUpdate){const e=this.view.state,t=this.view.featuresTilingScheme.getClosestInfoForScale(e.scale).level;this._graphicStore.updateLevel(t),this._tileStore.setViewState(e)}const n=[],a=new Array(e.length+t.length);for(let e=0;e<s.length;e++){const t=s[e],o=this._getIntersectingTiles(t);for(const e of o)r=e.id,Ne(r,e,i).removed.push(this._displayIds.get(t.uid));n.push(this._updateGraphic(t,null)),a[e]=t}const o=s.length;for(let t=0;t<e.length;t++){const s=e[t];a[o+t]=s,this._graphicsSet.add(s),n.push(this._addGraphic(s))}for(const e of t){this._abortProcessingGraphic(e.uid);const t=this._getIntersectingTiles(e);for(const s of t)r=s.id,Ne(r,s,i).removed.push(this._displayIds.get(e.uid));this._graphicsSet.delete(e),this._graphicStore.remove(e)}let l;this._flipUpdatingGraphics(),await Promise.all(n);for(let e=0;e<a.length;e++){l=a[e];const t=this._getIntersectingTiles(l);for(const e of t)r=e.id,Ne(r,e,i).addedOrModified.push(l)}this._graphicStore.updateZ();const d=[];for(const[e,t]of i)d.push(this._updateTile(t));await Promise.all(d)}catch(e){}for(const e of t){const t=await this._getSymbolForGraphic(e,{});t&&this._hashToExpandedSymbol.delete(t.hash())}i.clear(),this.notifyChange("updating"),this._processing=!1,this._needsProcessing&&(this._needsProcessing=!1,this._updateGraphics())}_getArcadeInfo(e){const t=(e.attributes?Object.keys(e.attributes):[]).map((t=>({name:t,alias:t,type:"string"==typeof e.attributes[t]?"esriFieldTypeString":"esriFieldTypeDouble"})));return(0,n.Wi)(e.geometry)?null:{geometryType:(0,p.Ji)(e.geometry),spatialReference:c.Z.fromJSON(e.geometry.spatialReference),fields:t}}async _getSymbolForGraphic(e,t){return(0,n.pC)(e.symbol)?e.symbol:(0,n.pC)(this.renderer)?this.renderer.getSymbolAsync(e,{scale:this.view.scale,abortOptions:t}):this._getNullSymbol(e)}async _getSymbolResources(e,t){if(!this.container.stage)return Promise.resolve(null);const s=await this._getSymbolForGraphic(e,t),i=s.hash();let r=this._hashToExpandedSymbol.get(i);if(!r){let n=this._hashTpExpandedSymbolPromise.get(i);if(n)r=await n;else{const a=this._getArcadeInfo(e),o=(0,ye.PY)(s);n=(0,D.B)(o,a,t),this._hashTpExpandedSymbolPromise.set(i,n);try{r=await n,this._hashTpExpandedSymbolPromise.delete(i),this._hashToExpandedSymbol.set(i,r)}catch(e){this._hashTpExpandedSymbolPromise.delete(i),(0,l.k_)(e)}}}if("esriTS"===r.type){const e=[],[t]=(0,w.E)(r.text);for(let s=0;s<t.length;s++)e.push(t.charCodeAt(s));const s={symbol:r,id:0,glyphIds:e},[{mosaicItem:i}]=await this.container.getMaterialItems([s]);return{symbol:r,mosaicItem:i}}return{symbol:r,mosaicItem:null}}async _projectAndNormalizeGeometry(e,t){if((0,n.Wi)(e.geometry)||"mesh"===e.geometry.type)return Promise.resolve(null);let s=e.geometry;if((0,p.oU)(s)){const e=s.rings;s.rings=e}else if((0,p.l9)(s)){const e=s.paths;s.paths=e}else if((0,p.YX)(s)){const i=await this._getSymbolForGraphic(e,t);s=(0,me.yA)(i.type)||(0,me.ab)(i.type)?s.center:f.Z.fromExtent(s)}await(0,T._W)(s.spatialReference,this.view.spatialReference);const i=(0,b.U)(s),r=(0,T.iV)(i,s.spatialReference,this.view.spatialReference);return(0,u.pW)(r),r}_onTileUpdate(e){const t=(0,h.C5)(this.view.spatialReference);if(e.added&&e.added.length>0)for(const s of e.added)this._addNewTile(s,t);if(e.removed&&e.removed.length>0)for(const t of e.removed)this._removeTile(t.key)}async _addGraphic(e){this._abortProcessingGraphic(e.uid);const t=(0,l.yi)();this._graphicIdToAbortController.set(e.uid,t);const s={signal:t.signal};try{await this._addOrUpdateGraphic(e,s),this._graphicIdToAbortController.delete(e.uid)}catch(t){if(this._graphicIdToAbortController.delete(e.uid),!(0,l.D_)(t))throw t}}async _updateGraphic(e,t){const s=this._projectAndNormalizeGeometry(e,t),i=this._getSymbolResources(e,t),[r,n]=await Promise.all([s,i]);this._graphicStore.addOrModify(e,n,r)}async _addOrUpdateGraphic(e,t){const s=this._projectAndNormalizeGeometry(e,t),i=this._getSymbolResources(e,t);try{const[t,r]=await Promise.all([s,i]);this._addProjectedGraphic(e,r,t)}catch(e){if(!(0,l.D_)(e))throw e}}_addProjectedGraphic(e,t,s){this._graphicsSet.has(e)&&this._graphicStore.addOrModify(e,t,s)}_addTile(e){const t=this.view.featuresTilingScheme.getTileBounds((0,y.Ue)(),e),s=new U(e,t);return this._tiles.set(e,s),this.container.addChild(s),s}_addNewTile(e,t){const s=this._addTile(e.key),i=this._graphicStore.queryTileData(this._templateStore,e);if(t){const s=Math.round((t.valid[1]-t.valid[0])/e.resolution);for(const e of i)e.geometry&&((0,p.wp)(e.geometry)||(0,p.aW)(e.geometry))&&this._wrapPoints(e,s)}const r=e.key;this._tileUpdateSet.add(e.key),this.notifyChange("updating"),this._processGraphics(e,i).then((e=>{const t={type:"update",clear:!1,addOrUpdate:e,remove:[],end:!0};s.patch(t),this._tileUpdateSet.delete(r),this.notifyChange("updating")})).catch((e=>{if(this._tileUpdateSet.delete(r),this.notifyChange("updating"),!(0,l.D_)(e))throw e}))}_removeTile(e){if(!this._tiles.has(e))return;const t=this._tiles.get(e);this.container.removeChild(t),t.destroy(),this._tiles.delete(e)}_setFilterState(e,t){const s=this._displayIds.get(e),i=this._attributeStore.getHighlightFlag(e);this._attributeStore.setData(s,0,0,i|(t?x.Zd:0))}_getGraphicsData(e,t,s){const i=(0,h.C5)(this.view.spatialReference),r=this._graphicStore.getGraphicsData(e,t,s);if(i){const e=Math.round((i.valid[1]-i.valid[0])/t.resolution);for(const t of r)t.geometry&&((0,p.wp)(t.geometry)||(0,p.aW)(t.geometry))&&this._wrapPoints(t,e)}return r}_wrapPoints(e,t){const s=e.geometry;(0,p.aW)(s)?this._wrapMultipoint(s,t):this._wrapPoint(e,t)}_wrapMultipoint(e,t){const s=e.points,i=[];let r=0,n=0;for(const[e,a]of s){if(i.push([e+r,a]),r=0,t===me.I_){const s=5*me.y1;e+n<s?(i.push([t,0]),r=-t):e+n>me.I_-s&&(i.push([-t,0]),r=t)}else e+n<-me.y1?(i.push([t,0]),r=-t):e+n>me.I_+me.y1&&(i.push([-t,0]),r=t);n+=e}e.points=i}_wrapPoint(e,t){const s=e.geometry;if(t===me.I_){const i=5*me.y1;s.x<i?e.geometry={points:[[s.x,s.y],[t,0]]}:s.x>me.I_-i&&(e.geometry={points:[[s.x,s.y],[-t,0]]})}else s.x<-me.y1?e.geometry={points:[[s.x,s.y],[t,0]]}:s.x>me.I_+me.y1&&(e.geometry={points:[[s.x,s.y],[-t,0]]})}async _processGraphics(e,t,s){if(!t||!t.length||!this._meshFactory)return null;const i=Te.from(t),r=this._meshFactory,n=await this._matcher;return await r.analyzeGraphics(i,n,null,null,s),this._attributeStore.sendUpdates(),this._processAnalyzedGraphics(e,i)}_processAnalyzedGraphics(e,t){const s=this._meshFactory,i=t.getApproximateSize(),r=t.getCursor(),n={features:i,records:i,metrics:0},a=new pe._(e.key.id,n,!1,!1,!1);for(;r.next();){const e=r.readGraphic();e.insertAfter=-1===e.insertAfter?-1:this._displayIds.get(e.insertAfter),e.displayId=this._displayIds.get(e.attributes[this.uid]),s.writeGraphic(a,r)}const o=e.tileInfoView.tileInfo.isWrappable,l=a.serialize(o);if(1!==l.length)return new ue;const d=l[0].message;return ue.fromVertexData(d)}_abortProcessingGraphic(e){this._graphicIdToAbortController.has(e)&&this._graphicIdToAbortController.get(e).abort()}_getNullSymbol(e){const t=e.geometry;return(0,p.l9)(t)?g.mW:(0,p.oU)(t)||(0,p.YX)(t)?g.kD:g.G}_flipUpdatingGraphics(){this._updatingGraphicsTimer&&clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=setTimeout((()=>{this._updatingGraphicsTimer=null,this.notifyChange("updating")}),160),this.notifyChange("updating")}};(0,i._)([(0,a.Cb)({constructOnly:!0})],Xe.prototype,"requestUpdateCallback",void 0),(0,i._)([(0,a.Cb)()],Xe.prototype,"container",void 0),(0,i._)([(0,a.Cb)({constructOnly:!0})],Xe.prototype,"graphics",void 0),(0,i._)([(0,a.Cb)()],Xe.prototype,"updating",null),(0,i._)([(0,a.Cb)()],Xe.prototype,"view",void 0),(0,i._)([(0,a.Cb)()],Xe.prototype,"updateRequested",void 0),Xe=(0,i._)([(0,o.j)("esri.views.2d.layers.support.GraphicsView2D")],Xe);const Ye=Xe}}]);