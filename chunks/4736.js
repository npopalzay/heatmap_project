(self.webpackChunkgeog863_final=self.webpackChunkgeog863_final||[]).push([[4736],{66023:(e,t,r)=>{"use strict";r.d(t,{G:()=>i});var s=r(29107);class i{constructor(e,t,r=""){this.major=e,this.minor=t,this._context=r}lessThan(e,t){return this.major<e||e===this.major&&this.minor<t}since(e,t){return!this.lessThan(e,t)}validate(e){if(this.major!==e.major){const t=this._context&&this._context+":",r=this._context&&this._context+" ";throw new s.Z(t+"unsupported-version",`Required major ${r}version is '${this.major}', but got '\${version.major}.\${version.minor}'`,{version:e})}}clone(){return new i(this.major,this.minor,this._context)}static parse(e,t=""){const[r,a]=e.split("."),o=/^\s*\d+\s*$/;if(!r||!r.match||!r.match(o))throw new s.Z((t&&t+":")+"invalid-version","Expected major version to be a number, but got '${version}'",{version:e});if(!a||!a.match||!a.match(o))throw new s.Z((t&&t+":")+"invalid-version","Expected minor version to be a number, but got '${version}'",{version:e});const n=parseInt(r,10),l=parseInt(a,10);return new i(n,l,t)}}},94736:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>q});var s=r(87397),i=(r(1867),r(18029)),a=(r(9783),r(9385)),o=r(82203),n=r(23757),l=r(65482),p=r(17808),u=r(29107),y=(r(17593),r(15392),r(11603)),c=(r(11786),r(14790)),h=r(83746),d=r(65869),b=r(36040),m=r(71604),f=r(97370),g=r(47596),v=r(72046),x=r(4425),S=r(83320),w=r(17398),_=r(52220),O=r(80157),C=r(91081),L=r(17060),T=r(36609),E=r(74893),j=r(8757),M=r(77796),I=r(609),N=r(83639),Z=r(68261),A=r(37813);let P=class extends((0,w.h)((0,T.n)((0,L.M)((0,C.Q)((0,Z.x)((0,M.O)((0,S.Y)((0,x.q)((0,O.I)((0,g.R)((0,_.N)((0,E.p)(m.Z))))))))))))){constructor(...e){super(...e),this.alwaysRefetch=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=(0,i.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).then((()=>this._fetchService(t)),(()=>this._fetchService(t)))),Promise.resolve(this)}readImageFormat(e,t){const r=t.supportedImageFormatTypes;return r&&r.indexOf("PNG32")>-1?"png32":"png24"}writeSublayers(e,t,r,s){if(!this.loaded||!e)return;const i=e.slice().reverse().flatten((({sublayers:e})=>e&&e.toArray().reverse())).toArray();let a=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&this.capabilities.exportMap.supportsDynamicLayers){const e=(0,y.M9)(s.origin);if(3===e){const e=this.createSublayersForOrigin("service").sublayers;a=(0,N.QV)(i,e,2)}else if(e>3){const e=this.createSublayersForOrigin("portal-item");a=(0,N.QV)(i,e.sublayers,(0,y.M9)(e.origin))}}const o=[],n={writeSublayerStructure:a,...s};let l=a;i.forEach((e=>{const t=e.write({},n);o.push(t),l=l||"user"===e.originOf("visible")})),o.some((e=>Object.keys(e).length>1))&&(t.layers=o),l&&(t.visibleLayers=i.filter((e=>e.visible)).map((e=>e.id)))}createExportImageParameters(e,t,r,s){const i=s&&s.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian());const a=new A.R({layer:this,scale:(0,j.yZ)({extent:e,width:t})*i}),o=a.toJSON();a.destroy();const n=!s||!s.rotation||this.version<10.3?{}:{rotation:-s.rotation},l=e&&e.spatialReference,p=l.wkid||JSON.stringify(l.toJSON());o.dpi*=i;const u={};if(null!=s&&s.timeExtent){const{start:e,end:t}=s.timeExtent.toJSON();u.time=e&&t&&e===t?""+e:`${null==e?"null":e},${null==t?"null":t}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(u.time="null,null");return{bbox:e&&e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:p,imageSR:p,size:t+","+r,...o,...n,...u}}async fetchImage(e,t,r,s){const i={responseType:"image"};s&&s.timestamp&&(i.query={...i.query,_ts:s.timestamp}),s&&s.signal&&(i.signal=s.signal),this.customParameters&&Object.keys(this.customParameters).length&&(i.query={...this.customParameters,...i.query});const a=this.parsedUrl.path+"/export",o={...this.parsedUrl.query,...this.createExportImageParameters(e,t,r,s),f:"image",_ts:this.alwaysRefetch?Date.now():null};return null==o.dynamicLayers||this.capabilities.exportMap.supportsDynamicLayers?(i.query?i.query={...o,...i.query}:i.query=o,(0,d.default)(a,i).then((e=>e.data)).catch((e=>{if((0,c.D_)(e))throw e;throw new u.Z("mapimagelayer:image-fetch-error",`Unable to load image: ${a}`,{error:e})}))):Promise.reject(new u.Z("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:o}))}async fetchRecomputedExtents(e={}){const t={...e,query:{returnUpdates:!0,f:"json"}},{data:r}=await(0,d.default)(this.url,t),{extent:s,fullExtent:i,timeExtent:a}=r,o=s||i;return{fullExtent:o&&h.Z.fromJSON(o),timeExtent:a&&f.Z.fromJSON({start:a[0],end:a[1]})}}loadAll(){return(0,b.GZ)(this,(e=>{e(this.allSublayers)}))}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:t,ssl:r}=await(0,d.default)(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters},signal:e});r&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t,this.read(t,{origin:"service",url:this.parsedUrl})}};(0,s._)([(0,o.Cb)()],P.prototype,"alwaysRefetch",void 0),(0,s._)([(0,o.Cb)()],P.prototype,"dpi",void 0),(0,s._)([(0,o.Cb)()],P.prototype,"gdbVersion",void 0),(0,s._)([(0,o.Cb)()],P.prototype,"imageFormat",void 0),(0,s._)([(0,n.r)("imageFormat",["supportedImageFormatTypes"])],P.prototype,"readImageFormat",null),(0,s._)([(0,o.Cb)({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],P.prototype,"imageMaxHeight",void 0),(0,s._)([(0,o.Cb)({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],P.prototype,"imageMaxWidth",void 0),(0,s._)([(0,o.Cb)()],P.prototype,"imageTransparency",void 0),(0,s._)([(0,o.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],P.prototype,"isReference",void 0),(0,s._)([(0,o.Cb)({json:{read:!1,write:!1}})],P.prototype,"labelsVisible",void 0),(0,s._)([(0,o.Cb)({type:["ArcGISMapServiceLayer"]})],P.prototype,"operationalLayerType",void 0),(0,s._)([(0,o.Cb)({json:{read:!1,write:!1}})],P.prototype,"popupEnabled",void 0),(0,s._)([(0,o.Cb)()],P.prototype,"sourceJSON",void 0),(0,s._)([(0,o.Cb)({json:{write:{ignoreOrigin:!0}}})],P.prototype,"sublayers",void 0),(0,s._)([(0,p.c)("sublayers",{layers:{type:[I.Z]},visibleLayers:{type:[a.z8]}})],P.prototype,"writeSublayers",null),(0,s._)([(0,o.Cb)({type:["show","hide","hide-children"]})],P.prototype,"listMode",void 0),(0,s._)([(0,o.Cb)({json:{read:!1},readOnly:!0,value:"map-image"})],P.prototype,"type",void 0),(0,s._)([(0,o.Cb)(v.HQ)],P.prototype,"url",void 0),P=(0,s._)([(0,l.j)("esri.layers.MapImageLayer")],P);const q=P},77796:(e,t,r)=>{"use strict";r.d(t,{O:()=>d});var s=r(87397),i=(r(1867),r(9783),r(9385),r(82203)),a=r(23757),o=r(65482),n=r(17593),l=(r(15392),r(11786),r(14790)),p=r(12031),u=r(83746),y=r(65869),c=r(66023),h=r(72046);const d=e=>{let t=class extends e{constructor(){super(...arguments),this.capabilities=void 0,this.copyright=null,this.fullExtent=null,this.legendEnabled=!0,this.spatialReference=null,this.version=null}readCapabilities(e,t){const r=t.capabilities&&t.capabilities.split(",").map((e=>e.toLowerCase().trim()));if(!r)return{operations:{supportsQuery:!1,supportsExportMap:!1,supportsExportTiles:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};const s=this.type,i=-1!==r.indexOf("query"),a=-1!==r.indexOf("map"),o=!!t.exportTilesAllowed,n=-1!==r.indexOf("tilemap"),l="tile"!==s&&!!t.supportsDynamicLayers,p="tile"!==s&&(!t.tileInfo||l),u="tile"!==s&&(!t.tileInfo||l),y="tile"!==s,h=!!t.cimVersion&&c.G.parse(t.cimVersion).since(1,4);return{operations:{supportsQuery:i,supportsExportMap:a,supportsExportTiles:o,supportsTileMap:n},exportMap:a?{supportsArcadeExpressionForLabeling:h,supportsSublayersChanges:y,supportsDynamicLayers:l,supportsSublayerVisibility:p,supportsSublayerDefinitionExpression:u}:null,exportTiles:o?{maxExportTilesCount:+t.maxExportTilesCount}:null}}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("capabilities")||t.hasOwnProperty("tables")?10:t.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3),r}async fetchSublayerInfo(e,t){return await this.fetchAllLayersAndTables(t),this._allLayersAndTablesMap.get(e)}async fetchAllLayersAndTables(e){await this.load(e),this._allLayersAndTablesPromise||(this._allLayersAndTablesPromise=(0,y.default)((0,n.mN)(this.url).path+"/layers",{responseType:"json",query:{f:"json",...this.customParameters}}).then((e=>{this._allLayersAndTablesMap=new Map;for(const t of e.data.layers)this._allLayersAndTablesMap.set(t.id,t);return{result:e.data}}),(e=>({error:e}))));const t=await this._allLayersAndTablesPromise;if((0,l.k_)(e),"result"in t)return t.result;throw t.error}};return(0,s._)([(0,i.Cb)({readOnly:!0})],t.prototype,"capabilities",void 0),(0,s._)([(0,a.r)("service","capabilities",["capabilities","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],t.prototype,"readCapabilities",null),(0,s._)([(0,i.Cb)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),(0,s._)([(0,i.Cb)({type:u.Z})],t.prototype,"fullExtent",void 0),(0,s._)([(0,i.Cb)(h.id)],t.prototype,"id",void 0),(0,s._)([(0,i.Cb)({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],t.prototype,"legendEnabled",void 0),(0,s._)([(0,i.Cb)(h.C_)],t.prototype,"popupEnabled",void 0),(0,s._)([(0,i.Cb)({type:p.Z})],t.prototype,"spatialReference",void 0),(0,s._)([(0,i.Cb)()],t.prototype,"version",void 0),(0,s._)([(0,a.r)("version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],t.prototype,"readVersion",null),t=(0,s._)([(0,o.j)("esri.layers.mixins.ArcGISMapService")],t),t}},68261:(e,t,r)=>{"use strict";r.d(t,{x:()=>f});var s=r(87397),i=(r(1867),r(9783)),a=(r(9385),r(23486)),o=r(82203),n=r(65482),l=r(29107),p=(r(17593),r(15392),r(11603)),u=(r(11786),r(50519)),y=r(32921),c=r(609),h=r(83639);const d=i.Z.getLogger("esri.layers.TileLayer"),b=u.Z.ofType(c.Z);function m(e,t){e&&e.forEach((e=>{t(e),e.sublayers&&e.sublayers.length&&m(e.sublayers,t)}))}const f=e=>{let t=class extends e{constructor(...e){super(...e),this.allSublayers=new y.Z({root:this,rootCollectionNames:["sublayers"],getChildrenFunction:e=>e.sublayers}),this.sublayersSourceJSON={2:{},3:{},4:{},5:{}},this.watch("sublayers",((e,t)=>this._handleSublayersChange(e,t)),!0)}readSublayers(e,t){if(!t||!e)return;const{sublayersSourceJSON:r}=this,s=(0,p.M9)(t.origin);if(s<2)return;if(r[s]={context:t,visibleLayers:e.visibleLayers||r[s].visibleLayers,layers:e.layers||r[s].layers},s>2)return;this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers);const{sublayers:i,origin:o}=this.createSublayersForOrigin("web-document"),n=(0,a.vw)(this);n.setDefaultOrigin(o),this._set("sublayers",new b(i)),n.setDefaultOrigin("user")}findSublayerById(e){return this.allSublayers.find((t=>t.id===e))}createServiceSublayers(){return this.createSublayersForOrigin("service").sublayers}createSublayersForOrigin(e){const t=(0,p.M9)("web-document"===e?"web-map":e);let r=2,s=this.sublayersSourceJSON[2].layers,i=this.sublayersSourceJSON[2].context,a=null;const o=[3,4,5].filter((e=>e<=t));for(const e of o){const t=this.sublayersSourceJSON[e];(0,h.ac)(t.layers)&&(r=e,s=t.layers,i=t.context,t.visibleLayers&&(a={visibleLayers:t.visibleLayers,context:t.context}))}const n=[3,4,5].filter((e=>e>r&&e<=t));let l=null;for(const e of n){const{layers:t,visibleLayers:r,context:s}=this.sublayersSourceJSON[e];t&&(l={layers:t,context:s}),r&&(a={visibleLayers:r,context:s})}const u=function(e,t){const r=[],s={};return e?(e.forEach((e=>{const i=new c.Z;if(i.read(e,t),s[i.id]=i,null!=e.parentLayerId&&-1!==e.parentLayerId){const t=s[e.parentLayerId];t.sublayers||(t.sublayers=[]),t.sublayers.unshift(i)}else r.unshift(i)})),r):r}(s,i),y=new Map,d=new Set;if(l)for(const e of l.layers)y.set(e.id,e);if(a)for(const e of a.visibleLayers)d.add(e);return m(u,(e=>{l&&e.read(y.get(e.id),l.context),a&&e.read({defaultVisibility:d.has(e.id)},a.context)})),{origin:(0,p.x3)(r),sublayers:new b({items:u})}}read(e,t){super.read(e,t),this.readSublayers(e,t)}_handleSublayersChange(e,t){t&&(t.forEach((e=>{e.parent=null,e.layer=null})),this.handles.remove("sublayers-owner")),e&&(e.forEach((e=>{e.parent=this,e.layer=this})),this.handles.add([e.on("after-add",(({item:e})=>{e.parent=this,e.layer=this})),e.on("after-remove",(({item:e})=>{e.parent=null,e.layer=null}))],"sublayers-owner"),"tile"===this.type&&this.handles.add(e.on("before-changes",(e=>{d.error(new l.Z("tilelayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{layer:this})),e.preventDefault()})),"sublayers-owner"))}};return(0,s._)([(0,o.Cb)({readOnly:!0})],t.prototype,"allSublayers",void 0),(0,s._)([(0,o.Cb)({readOnly:!0,type:u.Z.ofType(c.Z)})],t.prototype,"serviceSublayers",void 0),(0,s._)([(0,o.Cb)({value:null,type:b,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],t.prototype,"sublayers",void 0),(0,s._)([(0,o.Cb)({readOnly:!0})],t.prototype,"sublayersSourceJSON",void 0),t=(0,s._)([(0,n.j)("esri.layers.mixins.SublayersOwner")],t),t}}}]);